<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/3.4" created="2012-06-15 16:53" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>i4 apps</title>
	<link>http://www.i4-apps.com</link>
	<description>Learning the ropes...</description>
	<pubDate>Fri, 15 Jun 2012 16:53:41 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://www.i4-apps.com</wp:base_site_url>
	<wp:base_blog_url>http://www.i4-apps.com</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>me</wp:author_login><wp:author_email>david@i4-apps.com</wp:author_email><wp:author_display_name><![CDATA[David Barton]]></wp:author_display_name><wp:author_first_name><![CDATA[David]]></wp:author_first_name><wp:author_last_name><![CDATA[Barton]]></wp:author_last_name></wp:author>

	<wp:category><wp:term_id>3</wp:term_id><wp:category_nicename>all-assignments</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[All assignments]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>4</wp:term_id><wp:category_nicename>general-ios</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[General iOS]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>1</wp:term_id><wp:category_nicename>uncategorized</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name></wp:category>
	<wp:tag><wp:term_id>5</wp:term_id><wp:tag_slug>5-1</wp:tag_slug><wp:tag_name><![CDATA[5.1]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>6</wp:term_id><wp:tag_slug>assignment-1</wp:tag_slug><wp:tag_name><![CDATA[assignment 1]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>7</wp:term_id><wp:tag_slug>assignment-2</wp:tag_slug><wp:tag_name><![CDATA[assignment 2]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>8</wp:term_id><wp:tag_slug>assignment-3</wp:tag_slug><wp:tag_name><![CDATA[assignment 3]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>27</wp:term_id><wp:tag_slug>assignment-4</wp:tag_slug><wp:tag_name><![CDATA[assignment 4]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>30</wp:term_id><wp:tag_slug>assignment-5</wp:tag_slug><wp:tag_name><![CDATA[assignment 5]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>9</wp:term_id><wp:tag_slug>bar-button-item</wp:tag_slug><wp:tag_name><![CDATA[bar button item]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>10</wp:term_id><wp:tag_slug>calculator</wp:tag_slug><wp:tag_name><![CDATA[calculator]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>11</wp:term_id><wp:tag_slug>cs193p</wp:tag_slug><wp:tag_name><![CDATA[CS193p]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>12</wp:term_id><wp:tag_slug>fall-2011</wp:tag_slug><wp:tag_name><![CDATA[fall 2011]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>13</wp:term_id><wp:tag_slug>graphing-calculator</wp:tag_slug><wp:tag_name><![CDATA[graphing calculator]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>14</wp:term_id><wp:tag_slug>infinity</wp:tag_slug><wp:tag_name><![CDATA[INFINITY]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>15</wp:term_id><wp:tag_slug>ios</wp:tag_slug><wp:tag_name><![CDATA[iOS]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>16</wp:term_id><wp:tag_slug>ios-5-1</wp:tag_slug><wp:tag_name><![CDATA[iOS 5.1]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>17</wp:term_id><wp:tag_slug>isinf</wp:tag_slug><wp:tag_name><![CDATA[isinf]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>18</wp:term_id><wp:tag_slug>isnan</wp:tag_slug><wp:tag_name><![CDATA[isnan]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>19</wp:term_id><wp:tag_slug>nan</wp:tag_slug><wp:tag_name><![CDATA[NAN]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>20</wp:term_id><wp:tag_slug>objective-c</wp:tag_slug><wp:tag_name><![CDATA[objective c]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>21</wp:term_id><wp:tag_slug>popovers</wp:tag_slug><wp:tag_name><![CDATA[popovers]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>22</wp:term_id><wp:tag_slug>rpn-calculator</wp:tag_slug><wp:tag_name><![CDATA[RPN calculator]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>23</wp:term_id><wp:tag_slug>stanford-university</wp:tag_slug><wp:tag_name><![CDATA[stanford university]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>29</wp:term_id><wp:tag_slug>top-places</wp:tag_slug><wp:tag_name><![CDATA[top places]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>24</wp:term_id><wp:tag_slug>uisplitviewcontroller</wp:tag_slug><wp:tag_name><![CDATA[UISplitViewController]]></wp:tag_name></wp:tag>

	<generator>http://wordpress.org/?v=3.4</generator>

	<item>
		<title>About</title>
		<link>http://www.i4-apps.com/about-me/</link>
		<pubDate>Wed, 07 Mar 2012 14:45:28 +0000</pubDate>
		<dc:creator>me</dc:creator>
		<guid isPermaLink="false">http://i4-apps.com/?page_id=51</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="text-align: justify;">Hello there, my name is David Barton and I am a software designer and developer.</p>
I have been working professionally in software for around fifteen years, working mainly at corporates building enterprise solutions based on Oracle database and Java. At the moment, I'm taking a little time off to relax, explore iOS and learn some new tricks.

IÂ am married, have two children and live in Bath in the UK. ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>51</wp:post_id>
		<wp:post_date>2012-03-07 14:45:28</wp:post_date>
		<wp:post_date_gmt>2012-03-07 14:45:28</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>about-me</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>20</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>s2mail</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CS193p solutions</title>
		<link>http://www.i4-apps.com/cs193p-solutions/</link>
		<pubDate>Wed, 07 Mar 2012 14:53:54 +0000</pubDate>
		<dc:creator>me</dc:creator>
		<guid isPermaLink="false">http://i4-apps.com/?page_id=57</guid>
		<description></description>
		<content:encoded><![CDATA[As a way to learn iOS, I would highly recommend the Stanford University <a title="iPad and iPhone Application Development (HD) by Paul Hegarty (Fall 2011)" href="http://itunes.apple.com/itunes-u/ipad-iphone-application-development/id473757255" target="_blank">CS193p lectures</a> taught by Paul Hegarty and available through iTunes U. 

The assignments and lecture presentations are all available for download from the <a title="CS 193P iPhone Application Development, Stanford University" href="http://www.stanford.edu/class/cs193p/cgi-bin/drupal/" target="_blank">CS193p homepage </a> at Stanford University. The solutions posted are based on the Fall 2011 course.

<a href="http://www.i4-apps.com/assignment-1/" title="Assignment 1">Assignment 1: required tasks</a>
<a href="http://www.i4-apps.com/assignment-1-extra-credit/" title="Assignment 1:extra credit">Assignment 1: extra credit</a>
<a href="http://www.i4-apps.com/assignment-2-task1/" title="Assignment 2: task1">Assignment 2: task1</a>
<a href="http://www.i4-apps.com/assignment-2-task2/" title="Assignment 2: task2">Assignment 2: task2</a>
<a href="http://www.i4-apps.com/assignment-2-completion/" title="Assignment 2: task2">Assignment 2: completion</a>
<a href="http://www.i4-apps.com/assignment-3-required-tasks/" title="Assignment 3: required tasks">Assignment 3: required tasks</a>
<a href="http://www.i4-apps.com/assignment-3-extra-credit/" title="Assignment 3: extra credit">Assignment 3: extra credit</a>
<a href="http://i4-apps.com/assignment-4-required-tasks/" title="Assignment 4: required tasks">Assignment 4: required tasks</a>
<a href="http://i4-apps.com/assignment-4-extra-credit/" title="Assignment 4: extra credit">Assignment 4: extra credit</a>
<a href="http://i4-apps.com/assignment-5-tasks-1-2/" title="Assignment 5: tasks 1-2">Assignment 5: tasks 1-2</a>

Any questions, comments or improvements to my solutions are happily received.

Enjoy!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>57</wp:post_id>
		<wp:post_date>2012-03-07 14:53:54</wp:post_date>
		<wp:post_date_gmt>2012-03-07 14:53:54</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>cs193p-solutions</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>10</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>s2mail</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Assignment 1: required tasks</title>
		<link>http://www.i4-apps.com/assignment-1/</link>
		<pubDate>Wed, 07 Mar 2012 17:18:37 +0000</pubDate>
		<dc:creator>me</dc:creator>
		<guid isPermaLink="false">http://i4-apps.com/?p=76</guid>
		<description></description>
		<content:encoded><![CDATA[This post details my solution for the Required Tasks of the first assignment of the <a href="http://www.stanford.edu/class/cs193p/cgi-bin/drupal/" title="CS193p iPhone development homepage" target="_blank">Stanford University CS193p</a> lecture series taught by Paul Hegarty. The assignment builds on the <a title="Reverse Polish Notation" href="http://en.wikipedia.org/wiki/Reverse_Polish_notation" target="_blank">RPN</a> calculator that was demo-ed in lecture two. The referenced assignment and the walkthrough are available for download <a title="Assignment 1 artifacts" href="http://www.stanford.edu/class/cs193p/cgi-bin/drupal/node/261" target="_blank">here.</a>

Please let me know any questions, comments or improvements that you may have.

Ok, let's go....
<!--more-->
</br>
<strong>1. Follow the walk-through instructions (separate document) to build and run the calculator in the iPhone Simulator. Do not proceed to the next steps unless your calculator functions as expected and builds without warnings or errors.</strong>

Pretty straightforward, just need to follow the documented instructions. The walkthrough is augmented with lots of useful tidbits to help get the hang of things. I think it took me a couple of hours to work through.
</br></br>
<strong>2. Your calculator already works with floating point numbers (e.g. if you touch the buttonsÂ 3 Enter 4 /Â it will properly show the resulting value of 0.75), however, there is no way for the user to enter a floating point number. Remedy this. Allow only legal floating point numbers to be entered (e.g. â192.168.0.1â is not a legal floating point number). Donât worry too much about precision in this assignment.</strong>

I created a new Calculator keypad button in the main storyboard and specified a new action to be sent to the Controller when the user touches the button. The Controller implementation of the action looks like this: 

<code lang="objc">
- (IBAction)pointPressed {  
	
	NSRange range = [self.display.text rangeOfString:@"."]; 		
	if (range.location == NSNotFound) {
		self.display.text = [self.display.text stringByAppendingString:@"."];
	}        
	self.userIsInTheMiddleOfEnteringNumber = YES;    
}
</code>

We want to append a point symbol to the display, but only if the text in the display doesn't already contain a point. The hints came in handy to help find the right NSString method to use. 

We should also change our state so that our calculator knows that the user is in the middle of entering a number. This covers the case where <strong>.</strong> is the first key pressed in a new calculation.
</br></br>
<strong>3. Add the following 4 operation buttons:<ul>
<li>sin : calculates the sine of the top operand on the stack</li>
<li>cos : calculates the cosine of the top operand on the stack.</li>
<li>sqrt : calculates the square root of the top operand on the stack.</li>
<li>&#960;: calculates (well, conjures up) the value of &#960;. Examples: 3 &#960;Â * should put three times the value of &#960;Â into the display on your calculator, so should 3 Enter &#960;Â *, so should &#960;Â 3 *. Perhaps unexpectedly, &#960;Â Enter 3 * + would result in 4 times &#960;Â being shown. You should understand why this is the case. NOTE: This required task is to add &#960;Â as an operation (an operation which takes no arguments off of the operand stack), not a new way of entering an operand into the display.</li>
</ul></strong>

I created four new buttons, one for each of the new operations. and I bound them all to the existing operationPressed method in the Controller. You gotta love the ctrl-click-drag functionality that xCode provides!

I updated the CalculatorBrain implementation class, adding to the performOperation method as highlighted below:

<code lang="objc" highlight="14,15,16,17,18,19,20,21">
- (double)performOperation:(NSString *)operation {
    double result = 0;
    
    if ([operation isEqualToString:@"+"]) {
        result = [self popOperand] + [self popOperand];
    } else if ([@"*" isEqualToString:operation]) {
        result = [self popOperand] * [self popOperand];
    } else if ([operation isEqualToString:@"-"]) {
        double substrahend = [self popOperand];
        result = [self popOperand] - substrahend;
    } else if ([operation isEqualToString:@"/"]) {
        double divisor = [self popOperand];
        result = [self popOperand] / divisor;        
    } else if ([operation isEqualToString:@"sin"]) {
        result = sin ([self popOperand]);        
    } else if ([operation isEqualToString:@"cos"]) {
        result = cos ([self popOperand]);
    } else if ([operation isEqualToString:@"sqrt"]) {
        result = sqrt([self popOperand]);
    } else if ([operation isEqualToString:@"?"]) {
        result = M_PI;
    }    
    
    [self pushOperand:result];    
    return result;      
}
</code>
Not too tricky, with a little help from hint number 5! The functions and Pi are defined in Math.h. How exactly the code accesses these I am not quite sure, since Math.h is not explicitly included. Maybe access is via Foundation.h, imported within CalculatorBrain.h. If anyone knows the answer, please let me know :-)

<strong>Why do we get the perhaps unexpected result for <em>&#960;Â Enter 3 * +</em> of <em>4 times &#960;.</em>?</strong>

It is because we are treating &#960; as an operation, not as an operand. When we press &#960;, the Controller calls the Brain to perform the operation, and the Brain pushes the result of the operation on to the <em>operandStack</em>. We press Enter and the Controller asks the Brain to push the display text on to the stack. So now we have two 3.14159 entries in the stack. Going on to press 3 * will push 3 on to the stack and perform a times operation, resulting in a stack containing the value of &#960; and the result of 3*3.14159. Pressing + will then add these two together, resulting in a value equal to 4 times &#960;. Hurrah!
</br></br>
<a name="task4">&nbsp;</a>
<strong>4. Add a new text label (UILabel) to your user-interface which shows everything that has been sent to the brain (separated by spaces). For example, if the user has entered 6.3 Enter 5 + 2 *, this new text label would show 6.3 5 + 2 *. A good place to put this label is to make it a thin strip above the display text label. Donât forget to have the C button clear this too. All of the code for this task should be in your Controller (no changes to your Model are required for this one). You do not have to display an unlimited number of operations and operands, just a reasonable amount.</strong>

The new label requires a new outlet. I called mine <em>calculation</em> and created it by ctrl-dragging the label to the Controller header file. 

We want to record in <em>calculation</em> everything that gets sent to the Brain, neatly formatted. At this point, Brain messages are only sent when the <em>operationPressed</em> or the <em>enterPressed</em> methods are invoked. 

For reuse, I wrote a new Controller method which is then called by the two actions.
 
<code lang="objc">
- (void)appendToCalculation:(NSString*) text {
	
	self.calculation.text = 
		[self.calculation.text stringByAppendingString:
			[NSString stringWithFormat:@"%@ ", text]];
}
</code>

The <em>stringWithFormat</em> ensures things look tidy.

We then just need to message the new method from our <em>enterPressed</em> and <em>operationPressed</em> action implementations.

<code lang="objc" highlight = "3">
- (IBAction)enterPressed {
    [self.brain pushOperand:[self.display.text doubleValue]];
	[self appendToCalculation:self.display.text];	
    self.userIsInTheMiddleOfEnteringNumber = NO;
}
</code>
<code lang="objc" highlight="6">
- (IBAction)operationPressed:(UIButton *)sender {
	if (self.userIsInTheMiddleOfEnteringNumber) {
        [self enterPressed];
    }	
	NSString *operation = [sender currentTitle];
	[self appendToCalculation:operation];
	double result = [self.brain performOperation:operation];
    self.display.text = [NSString stringWithFormat:@"%g", result];
}
</code>
Cushty!
</br></br>
<strong>5. Add a âCâ button that clears everything (for example, the display in your View, the operand stack in your Model, any state you maintain in your Controller, etc.). Make sure 3 7 C 5 results in 5 showing in the display. You will have to add API to your Model to support this feature.</strong>

Another button on the calculator and another action to implement. We also need to add new functionality to the brain, so that we can empty it on request. I added the following to the brain implementation, with a public declaration in the brain header file.
<code lang="objc">
- (void)empty {
    self.operandStack = nil;
}
</code>

Seems a little cheeky just resetting the stack to nil and allowing the getter to allocate and reinitialise as required. Not sure, whether this is entirely good practice really; perhaps it causes memory fragmentation.....

And for the clearPressed action:

<code lang="objc">
- (IBAction)clearPressed {
    [self.brain empty];
    self.display.text = @"0";
    self.calculation.text = @"";
	self.userIsInTheMiddleOfEnteringNumber = NO;
}
</code>

Empty the brain, set the display to 0, set the calculation label to "empty" text and the state of the Controller to signify a new calculation.
</br></br>
<strong>6. If the user performs an operation for which he or she has not entered enough operands, use zero as the missing operand(s) (the code from the walkthrough does this already, so there is nothing to do for this task, it is just a clarification of what is required). Protect against invalid operands though (e.g. divide by zero).</strong>

To protect against invalid operands, I removed the test for zero, done by the brain before attempting to divide one number by another. This results in the word "inf" being displayed. Square rooting a negative number gives the display "nan". Seems good enough to me :-) 
</br></br>

An that's it for Assignment 1, at least as far as the required tasks go. Next post, I will detail my solution for the extra credit tasks.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>76</wp:post_id>
		<wp:post_date>2012-03-07 17:18:37</wp:post_date>
		<wp:post_date_gmt>2012-03-07 17:18:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>assignment-1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="all-assignments"><![CDATA[All assignments]]></category>
		<category domain="post_tag" nicename="assignment-1"><![CDATA[assignment 1]]></category>
		<category domain="post_tag" nicename="cs193p"><![CDATA[CS193p]]></category>
		<category domain="post_tag" nicename="fall-2011"><![CDATA[fall 2011]]></category>
		<category domain="post_tag" nicename="rpn-calculator"><![CDATA[RPN calculator]]></category>
		<category domain="post_tag" nicename="stanford-university"><![CDATA[stanford university]]></category>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>s2mail</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2</wp:comment_id>
			<wp:comment_author><![CDATA[Al]]></wp:comment_author>
			<wp:comment_author_email>apps@jawz.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://www.jawz.co.uk</wp:comment_author_url>
			<wp:comment_author_IP>195.74.148.65</wp:comment_author_IP>
			<wp:comment_date>2012-03-09 14:08:31</wp:comment_date>
			<wp:comment_date_gmt>2012-03-09 14:08:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Looking good Mr B, welcome to the real world :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.i4-apps.com</wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-03-09 16:11:14</wp:comment_date>
			<wp:comment_date_gmt>2012-03-09 16:11:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Cheers Al... it is so much more fun :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>2</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4</wp:comment_id>
			<wp:comment_author><![CDATA[Phillip Kelly-Ayo]]></wp:comment_author>
			<wp:comment_author_email>kellyayo@hotmail.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://www.trans-ocracy.com</wp:comment_author_url>
			<wp:comment_author_IP>94.175.117.221</wp:comment_author_IP>
			<wp:comment_date>2012-03-28 12:33:49</wp:comment_date>
			<wp:comment_date_gmt>2012-03-28 12:33:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks David.  I think that I can speak for all iOS dev newbies, in thanking you for helping the community.

Please, please, please keep up the good work.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.i4-apps.com</wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-03-28 13:03:52</wp:comment_date>
			<wp:comment_date_gmt>2012-03-28 13:03:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks Phillip :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>4</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7</wp:comment_id>
			<wp:comment_author><![CDATA[Phillip Kelly-Ayo]]></wp:comment_author>
			<wp:comment_author_email>kellyayo@hotmail.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://www.trans-ocracy.com</wp:comment_author_url>
			<wp:comment_author_IP>94.175.117.221</wp:comment_author_IP>
			<wp:comment_date>2012-03-30 14:47:24</wp:comment_date>
			<wp:comment_date_gmt>2012-03-30 14:47:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi David,

I had a 'leading zero' problem with the new 'calculation' label.  I added an addition if clause to the appendToCalculation method to solve: -
<code lang="objc">
- (void) appendToCalculation: ( NSString * ) text {
            if ( [self.calculation.text isEqualToString: @"0"] ) {
                 self.calculation.text = [ NSString stringWithFormat:@"%@", text ];
            } else {
            // as per original appendToCalculation method
            }           
}
</code>
Phil]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>9</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-03-31 17:53:54</wp:comment_date>
			<wp:comment_date_gmt>2012-03-31 17:53:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It looks like with your additional clause, if the user put it say "enter;5;enter" it would show a calculation of "5", instead of "0 5". Is that right or is there another aspect you are thinking of? The first zero doesn't seem too bad to me, as the user has explicitly pushed it on the stack by pressing the enter key initially. 

There does seem to be a problem with the original display field though, in that the user can push 0 multiple times and then multiple zeros will be shownâ¦..]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>7</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>10</wp:comment_id>
			<wp:comment_author><![CDATA[chad]]></wp:comment_author>
			<wp:comment_author_email>chad@percentjuice.com</wp:comment_author_email>
			<wp:comment_author_url>http://percentjuice.com</wp:comment_author_url>
			<wp:comment_author_IP>80.237.234.148</wp:comment_author_IP>
			<wp:comment_date>2012-04-22 12:32:46</wp:comment_date>
			<wp:comment_date_gmt>2012-04-22 12:32:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[SÃ­, Math.h is imported as part of Foundation.h.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>11</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-04-26 04:05:48</wp:comment_date>
			<wp:comment_date_gmt>2012-04-26 04:05:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[thanks :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>10</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>86</wp:comment_id>
			<wp:comment_author><![CDATA[Sergio Varela]]></wp:comment_author>
			<wp:comment_author_email>satv11@yahoo.com.mx</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>201.141.106.252</wp:comment_author_IP>
			<wp:comment_date>2012-05-03 06:06:08</wp:comment_date>
			<wp:comment_date_gmt>2012-05-03 06:06:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi David! I have found an issue (99% probably me!) on the pointPressed method, if you add it to the walkthrough as the inmediate task to accomplish, you can enter no zero decimal point numbers as the 1st operand, but when you enter p.e.  .25 as your 2nd or subsequent operand things go wrong as this second operand is being taken (in my example) as 25, as I said, it well might be me.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>89</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.i4-apps.com</wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-05-03 08:56:08</wp:comment_date>
			<wp:comment_date_gmt>2012-05-03 08:56:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Sergio - yes, I think you found a bug thereâ¦ :-)

I have modified <em>pointPressed</em>. I think this now works:
<code lang="objc">
- (IBAction)pointPressed {  
	
	// If the user isn't in the middle of entering number then display 
	// should be set to 0.
	if (!self.userIsInTheMiddleOfEnteringNumber) {
		self.display.text = @"0.";		
	} else { // Add a . into the number if there isn't already one there
		NSRange range = [self.display.text rangeOfString:@"."]; 		
		if (range.location == NSNotFound) {
			self.display.text = [self.display.text stringByAppendingString:@"."];
		}			
	}        
	self.userIsInTheMiddleOfEnteringNumber = YES;    
}
</code>

Thanks for highlighting!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>86</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>122</wp:comment_id>
			<wp:comment_author><![CDATA[Harwey]]></wp:comment_author>
			<wp:comment_author_email>harri.havanka@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>192.100.123.77</wp:comment_author_IP>
			<wp:comment_date>2012-05-09 11:27:29</wp:comment_date>
			<wp:comment_date_gmt>2012-05-09 11:27:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,

the sin() and cos() functions from math.h use radians, not degrees, so you should make conversion to your values before passing them. I know this as i was getting strange results until i figured that out.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>123</wp:comment_id>
			<wp:comment_author><![CDATA[azlind]]></wp:comment_author>
			<wp:comment_author_email>azlindz@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>79.235.254.199</wp:comment_author_IP>
			<wp:comment_date>2012-05-09 15:33:49</wp:comment_date>
			<wp:comment_date_gmt>2012-05-09 15:33:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi David,

I am facing some problems when i run simulation. When i press Clear button, i get SIGABRT error.
As see below.... i dunno what i did wrong...
---------------------------------------------------------------------
#import "CalculatorAppDelegate.h"

int main(int argc, char *argv[])
{
    @autoreleasepool {
        return UIApplicationMain(argc, argv, nil, NSStringFromClass([CalculatorAppDelegate class]));
    }
}
There were no issues found. Am i suppose to add codes in CalcAppDelegate? i did everything that was written in description by you and the changes made in the coments...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>124</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.i4-apps.com</wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-05-09 15:56:41</wp:comment_date>
			<wp:comment_date_gmt>2012-05-09 15:56:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi -sounds like a good idea. Do you know what the function is that does this conversion?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>122</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>125</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.i4-apps.com</wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-05-09 15:59:40</wp:comment_date>
			<wp:comment_date_gmt>2012-05-09 15:59:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi .. is there an error message given on the console? On error, normally some kind of stack trace will appear in the console window that gives a pointerâ¦

I don't think any additional is needed in CalcAppDelegateâ¦]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>123</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>129</wp:comment_id>
			<wp:comment_author><![CDATA[Harwey]]></wp:comment_author>
			<wp:comment_author_email>harri.havanka@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>192.100.123.77</wp:comment_author_IP>
			<wp:comment_date>2012-05-10 09:49:39</wp:comment_date>
			<wp:comment_date_gmt>2012-05-10 09:49:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I don't know, i just did it in the code as the formula is simple:


double radToDeg = [self popOperandOffProgramStack:stack] * M_PI/180;]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>124</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>131</wp:comment_id>
			<wp:comment_author><![CDATA[azlind]]></wp:comment_author>
			<wp:comment_author_email>azlindz@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>79.235.254.199</wp:comment_author_IP>
			<wp:comment_date>2012-05-10 13:06:52</wp:comment_date>
			<wp:comment_date_gmt>2012-05-10 13:06:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi David, thanks for your prompt reply. hehe .I went to the log navigator and retrieved this message...

GNU gdb 6.3.50-20050815 (Apple version gdb-1708) (Thu Nov  3 21:59:02 UTC 2011)
Copyright 2004 Free Software Foundation, Inc.
GDB is free software, covered by the GNU General Public License, and you are
welcome to change it and/or distribute copies of it under certain conditions.
Type "show copying" to see the conditions.
There is absolutely no warranty for GDB.  Type "show warranty" for details.
This GDB was configured as "x86_64-apple-darwin".sharedlibrary apply-load-rules all
Attaching to process 341.
Pending breakpoint 1 - ""CalculatorViewController.m":15" resolved
Pending breakpoint 2 - ""CalculatorViewController.m":14" resolved
2012-05-10 14:50:09.966 Calculator Ult[341:f803] -[CalculatorViewController clearPressed:]: unrecognized selector sent to instance 0x6a2f200
2012-05-10 14:50:09.993 Calculator Ult[341:f803] *** Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: '-[CalculatorViewController clearPressed:]: unrecognized selector sent to instance 0x6a2f200'
*** First throw call stack:
(0x13bc052 0x154dd0a 0x13bdced 0x1322f00 0x1322ce2 0x13bdec9 0x165c2 0x1655a 0xbbb76 0xbc03f 0xbb2fe 0x3ba30 0x3bc56 0x22384 0x15aa9 0x12a6fa9 0x13901c5 0x12f5022 0x12f390a 0x12f2db4 0x12f2ccb 0x12a5879 0x12a593e 0x13a9b 0x2768 0x26c5)
terminate called throwing an exceptionCurrent language:  auto; currently objective-c
kill
error while killing target (killing anyway): warning: error on line 2184 of "/SourceCache/gdb/gdb-1708/src/gdb/macosx/macosx-nat-inferior.c" in function "void macosx_kill_inferior_safe()": (os/kern) failure (0x5x)
quit
Program ended with exit code: 0

--------------------------------------------------------------------
this line "error while killing target (killing anyway): " spooks me a little. maybe i did somethng wrong the calculatorbrain.h.I added 

-(void)emtpy; 
for the clear button. Maybe this is not enough to send commands to viewController.m perhaps.

I am so lost, i know this xCode is like telling a story. I do get confused when must i create a new file and where to go to at first...I am still learning hehe.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>132</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.i4-apps.com</wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-05-10 14:01:40</wp:comment_date>
			<wp:comment_date_gmt>2012-05-10 14:01:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I think the error looks more complicated than it actually is :-). To me the key line looks to be:

Terminating app due to uncaught exception âNSInvalidArgumentExceptionâ, reason: â-[CalculatorViewController clearPressed:]: unrecognized selector sent to instance 0x6a2f200?

.. do you have a <em>clearPressed</em> method in CalculatorViewController correctly wired to the Clear button? Also you will need an implementation of the <em>empty</em> method inside calculator brain.m as well as in the header fileâ¦..]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>131</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>133</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.i4-apps.com</wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-05-10 14:03:40</wp:comment_date>
			<wp:comment_date_gmt>2012-05-10 14:03:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[ah yesâ¦ easy enough :-). Thanks!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>129</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Assignment 1: extra credit</title>
		<link>http://www.i4-apps.com/assignment-1-extra-credit/</link>
		<pubDate>Fri, 09 Mar 2012 22:00:33 +0000</pubDate>
		<dc:creator>me</dc:creator>
		<guid isPermaLink="false">http://i4-apps.com/?p=219</guid>
		<description></description>
		<content:encoded><![CDATA[This second post describes my solution for the Extra Credit tasks of Assignment 1, part of the <a href="http://www.stanford.edu/class/cs193p/cgi-bin/drupal/" title="CS193p iPhone development homepage" target="_blank">Stanford University CS193p</a> lectures series taught by Paul Hegarty.

So, for the hardcore...
<!--more-->
</br>
<strong>1. Implement a âbackspaceâ button for the user to press if they hit the wrong digit button. This is not intended to be âundo,â so if they hit the wrong operation button, they are out of luck! Itâs up to you to decided how to handle the case where they backspace away the entire number they are in the middle of entering, but having the display go completely blank is probably not very user-friendly.</strong>

It took a little while to figure out how to get a &#8592; to appear on the new backspace button. I used Alt-P to print Pi earlier in the assignment, but couldn't find an Alt-key to use here. A bit of searching took me to the Mac's "Edit --> Special Characters" function; it's always good to learn a new trick!

My implementation of <em>backspacePressed</em> looks like this.
<code lang="objc">
- (IBAction)backspacePressed {
	self.display.text =[self.display.text substringToIndex:
						[self.display.text length] - 1]; 
	
	if ( [self.display.text isEqualToString:@""]
		|| [self.display.text isEqualToString:@"-"]) {

		self.display.text = @"0";
		self.userIsInTheMiddleOfEnteringNumber = NO;
	}
}
</code>
The <em>substringToIndex</em> String method does the job..... 

Where the entire number is eaten, I handle this by replacing the text with zero and resetting the state to indicate that the user is no longer in the middle of entering a number.

There are a few more boundary cases to consider here also, such as "nan" and "inf". Maybe another time!
</br></br>
<strong>2. When the user hits an operation button, put an = on the end of the text label that is showing what was sent to the brain (required task #4). Thus the user will be able to tell whether the number in the Calculatorâs display is the result of a calculation or a number that the user has just entered.</strong>

In <a href="http://www.i4-apps.com/assignment-1/#task4" title="Assignment 1, task 4">task #4</a> of the assignment's required tasks, I added the new Controller method <em>appendToCalculation</em> and added a call to this method in the  <em>operationPressed</em> action. 

So, a few tweaks to these two methods...
<code lang="objc" highlight="6">
- (IBAction)operationPressed:(UIButton *)sender {
	if (self.userIsInTheMiddleOfEnteringNumber) {
        [self enterPressed];
    }	
	NSString *operation = [sender currentTitle];
	[self appendToCalculation: [operation stringByAppendingString:@" ="]];	
	double result = [self.brain performOperation:operation];
    self.display.text = [NSString stringWithFormat:@"%g", result];
</code>	
<code lang="objc" highlight="3,4,5">
- (void)appendToCalculation:(NSString*) text {
	
	self.calculation.text = 
		[self.calculation.text stringByReplacingOccurrencesOfString:@"= " 
														 withString:@""];
	self.calculation.text = 
		[self.calculation.text stringByAppendingString:
			[NSString stringWithFormat:@"%@ ", text]];
}
</code>

... in <em>operationPressed</em> we just add the = symbol to the operator we are sending to <em>appendToCalculation</em>.

In <em>appendtoCalculation</em> we need to remove any existing = symbol before we add anything new to our <em>calculation</em> label. The <em>stringByReplacingOccurencesOfString</em> function seems to do the trick nicely.
</br></br>
<strong>3. Add a +/- operation which changes the sign of the number in the display. Be careful with this one. If the user is in the middle of entering a number, you probably want to change the sign of that number and let them continue entering it, not force an enterPressed like other operations do. But if they are not in the middle of entering a number, then it would work just like any other single-operand operation (e.g. sqrt).</strong>

To the last task....

A new button and a new Controller method, <em>signChangePressed</em>, for the +/- operation.
<code lang="objc">
- (IBAction)signChangePressed:(UIButton *)sender {
    
    if (self.userIsInTheMiddleOfEnteringNumber) {        
        if ([[self.display.text substringToIndex:1] isEqualToString:@"-"]) {            
            self.display.text = [self.display.text substringFromIndex:1];
        } else {
            self.display.text = [@"-" stringByAppendingString:self.display.text]; 
        }
    } else {
		[self operationPressed:sender];
    }    
}
</code>
If the user is in the middle of entering a number we just want to change the display, so we just need to do some text manipulation. If the user is not entering a number, then we want to do a calculator operation and by including the UIButton parameter in the method signature we can make use of <em>operationPressed</em>, passing along <em>sender</em>.

We need to add a little more code to the <em>brain</em> too.

<code lang="objc" highlight="22,23">
- (double)performOperation:(NSString *)operation {
    double result = 0;
   
    if ([operation isEqualToString:@"+"]) {
        result = [self popOperand] + [self popOperand];
    } else if ([@"*" isEqualToString:operation]) {
        result = [self popOperand] * [self popOperand];
    } else if ([operation isEqualToString:@"-"]) {
        double substrahend = [self popOperand];
        result = [self popOperand] - substrahend;
    } else if ([operation isEqualToString:@"/"]) {
        double divisor = [self popOperand];
        result = [self popOperand] / divisor;        
    } else if ([operation isEqualToString:@"sin"]) {
        result = sin ([self popOperand]);        
    } else if ([operation isEqualToString:@"cos"]) {
        result = cos ([self popOperand]);
    } else if ([operation isEqualToString:@"sqrt"]) {
        result = sqrt([self popOperand]);
    } else if ([operation isEqualToString:@"?"]) {
        result = M_PI;
    } else if ([operation isEqualToString:@"Â±"]) {
		result = [self popOperand] * -1;
	}
    
    [self pushOperand:result];    
    return result;      
}
</code>
I just multiplied the top of the stack by -1. Seems to work nicely!
</br>
And that's it for assignment 1. My RPN Calculator now looks like this.
<center>
<img src="http://i4-apps.com/wp-content/uploads/2012/04/assignment1.tiff" alt="Screenshot for assignment 1" />
</center>
Wayhey!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>219</wp:post_id>
		<wp:post_date>2012-03-09 22:00:33</wp:post_date>
		<wp:post_date_gmt>2012-03-09 22:00:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>assignment-1-extra-credit</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="all-assignments"><![CDATA[All assignments]]></category>
		<category domain="post_tag" nicename="assignment-1"><![CDATA[assignment 1]]></category>
		<category domain="post_tag" nicename="cs193p"><![CDATA[CS193p]]></category>
		<category domain="post_tag" nicename="fall-2011"><![CDATA[fall 2011]]></category>
		<category domain="post_tag" nicename="rpn-calculator"><![CDATA[RPN calculator]]></category>
		<category domain="post_tag" nicename="stanford-university"><![CDATA[stanford university]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>s2mail</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>12</wp:comment_id>
			<wp:comment_author><![CDATA[Auditor]]></wp:comment_author>
			<wp:comment_author_email>auditor@xcode.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>98.231.194.201</wp:comment_author_IP>
			<wp:comment_date>2012-03-26 01:14:16</wp:comment_date>
			<wp:comment_date_gmt>2012-03-26 01:14:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[In operationPressed this code is redundant?
if (self.userIsInTheMiddleOfEnteringNumber)
        [self enterPressed]; 

Because enterPressed also checks for userIsInTheMiddleOfEnteringNumber.
No need to check here also.  Just execute
[self enterPressed];

Less code = less chance for bugs.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>13</wp:comment_id>
			<wp:comment_author><![CDATA[Auditor]]></wp:comment_author>
			<wp:comment_author_email>auditor@xcode.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>98.231.194.201</wp:comment_author_IP>
			<wp:comment_date>2012-03-26 01:19:46</wp:comment_date>
			<wp:comment_date_gmt>2012-03-26 01:19:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The code for subtraction could be simplified?
Try This Code
<code lang="objc">
else if ([operation isEqualToString:@"-"]){
     result = 0.0 - [self popOperand] + [self popOperand];
</code>

Don't have to declare "subtrahend"   Less code = Less chance for bugs.
==============================
Original Code
<code lang="objc">
else if ([operation isEqualToString:@"-"]) {
        double substrahend = [self popOperand];
        result = [self popOperand] - subtrahend;
</code>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>14</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.i4-apps.com</wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-03-26 07:52:33</wp:comment_date>
			<wp:comment_date_gmt>2012-03-26 07:52:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[hi - thanks for the comments.

enterPressed isn't checking for userIsInTheMiddleOfEnteringNumber... or maybe not explicitly at least..

<code lang="objc">
- (IBAction)enterPressed {
    [self.brain pushOperand:[self.display.text doubleValue]];
    [self appendToCalculation:self.display.text];   
    self.userIsInTheMiddleOfEnteringNumber = NO;
}
</code>

The method does assume though that the user is in the middle of entering ..  and if the user isn't and has pressed the operation key then it would seem preferable to push 0? - no code change as this is what should be in the display. To enable this, it would require removing the check...





]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>12</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>15</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.i4-apps.com</wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-03-26 07:58:21</wp:comment_date>
			<wp:comment_date_gmt>2012-03-26 07:58:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ah yes, it does seem unnecessary to declare subtrahend. Actually, the same is probably true for divisor in that we could use (1 / [self popOperand]) * [self popOperand]), instead of declaring up front.

Perhaps there is trade-off in that the reduced code here makes things a little less readable.... although as you say, less code = less chance of bugs...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>13</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>16</wp:comment_id>
			<wp:comment_author><![CDATA[dave a]]></wp:comment_author>
			<wp:comment_author_email>davida@dmv.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>96.225.178.75</wp:comment_author_IP>
			<wp:comment_date>2012-04-21 23:02:57</wp:comment_date>
			<wp:comment_date_gmt>2012-04-21 23:02:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Just want to say REALLY appreciate what you've done here!  I'm taking the iTunes U class and feel like I walked off a cliff after the first assignment.  

This is a huge help for my understanding.  Much appreciation sir]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>17</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-04-22 08:57:03</wp:comment_date>
			<wp:comment_date_gmt>2012-04-22 08:57:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[thank you - glad it helped :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>16</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>211</wp:comment_id>
			<wp:comment_author><![CDATA[Pallvi]]></wp:comment_author>
			<wp:comment_author_email>pal.kdeshpande@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>71.198.1.235</wp:comment_author_IP>
			<wp:comment_date>2012-06-11 19:28:23</wp:comment_date>
			<wp:comment_date_gmt>2012-06-11 19:28:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, pressing +/- button is throwing exception for me :(]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>212</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.i4-apps.com</wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-06-11 21:03:01</wp:comment_date>
			<wp:comment_date_gmt>2012-06-11 21:03:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[What is the error message you are getting?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>211</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Assignment 2: task1</title>
		<link>http://www.i4-apps.com/assignment-2-task1/</link>
		<pubDate>Tue, 13 Mar 2012 09:53:36 +0000</pubDate>
		<dc:creator>me</dc:creator>
		<guid isPermaLink="false">http://www.i4-apps.com/?p=311</guid>
		<description></description>
		<content:encoded><![CDATA[I have been working through the excellent <a href="http://www.stanford.edu/class/cs193p/cgi-bin/drupal/" title="CS193p iPhone development homepage" target="_blank">iPhone development course</a> at Stanford University taught by Paul Hegarty (CS193p). This post is my solution to task1 of the second assignment, available for download <a title="Assignment 2 artifacts" href="http://www.stanford.edu/class/cs193p/cgi-bin/drupal/node/265" target="_blank">here.</a>

I am finding this assignment quite a bit trickier than the first. Please let me know any suggested improvements, tips or useful info you can share.

So, with hardly anymore ado.... 
<!--more-->
As a pre-requisite we need to merge the CalculatorBrain API, demo-ed in lecture 4 into our Assignment 1 code. 

I won't re-state the tasks in detail this time, I will just summarise and post my solution. I've decided to comment the code better, rather than provide too much detail underneath each snippet. It's far less time-consuming!

<strong>Implement the capability for the CalculatorBrain to accept variables as operands</strong>
<code lang="objc">
- (void)pushVariable:(NSString *) variable {
		[self.programStack addObject:variable];	
}
</code>
So far so good... it's just a matter of adding the given variable to the <em>programStack</em>, in the same way in which operands and operations are added.
</br></br>
<strong>Add a new version of the <em>runProgram</em> method to support programs containing variables. Enable program to run with a supplied dictionary of variable values.</strong>
<code lang="objc">
+ (double) runProgram:(id)program 
  usingVariableValues:(NSDictionary *)variableValues {
	
	// Ensure program is an NSArray
	if (![program isKindOfClass:[NSArray class]]) return 0;
	
	NSMutableArray *stack= [program mutableCopy];
	
	// For each item in the program
	for (int i=0; i < [stack count]; i++) {
		id obj = [stack objectAtIndex:i]; 

		// See whether we think the item is a variable
		if ([obj isKindOfClass:[NSString class]] && ![self isOperation:obj]) {	
			id value = [variableValues objectForKey:obj];			
			// If value is not an instance of NSNumber, set it to zero
			if (![value isKindOfClass:[NSNumber class]]) {
				value = [NSNumber numberWithInt:0];
			}			
			// Replace program variable with value.
			[stack replaceObjectAtIndex:i withObject:value];
		}		
	}	
	// Starting popping off the stack
	return [self popOperandOffProgramStack:stack];	
}
</code>
The implementation relies on another method, suggested in hint #5.
<code lang="objc">
+ (BOOL)isOperation:(NSString *)operation {
	// Create a set of known operations
	NSSet *operationSet = [NSSet setWithObjects: @"+", @"-", @"*", @"/", @"sin", 
								  @"cos", @"sqrt", @"?", @"Â±", nil];
	
	return [operationSet containsObject:operation];
}
</code>
And we need to update the original <em>runProgram </em>for code re-use.
<code lang="objc">
+ (double)runProgram:(id)program {
	// Call the new runProgram method with a nil dictionary
	return [self runProgram:program usingVariableValues:nil];
}
</code>
</br></br>
<strong>Create a class method that returns the names of all variables for a given program.</strong>
<code lang="objc">
+ (NSSet *)variablesUsedInProgram:(id)program {	
	
	// Ensure program is an NSArray
	if (![program isKindOfClass:[NSArray class]]) return nil;
	
	NSMutableSet *variables = [NSMutableSet set];
	
	// For each item in the program
	for (id obj in program) {
		// If we think it's a variable add it to the variables set
		if ([obj isKindOfClass:[NSString class]] && ![self isOperation:obj]) {
			[variables addObject:obj]; 	
		}
	}	
	// Return nil if we don't have any variables
	if ([variables count] == 0) return nil; else return [variables copy];
}
</code>
</br></br>
I also added some some support to enable testing. If we add a new public method to the brain to push operators then we can use existing CalculatorBrain capabilities to help us create programs. First we add in:
<code lang="objc">
- (void)pushOperation:(NSString *) operation {
	[self.programStack addObject:operation];	
}
</code>
I then added a new button and implemented a new Controller action.
<code lang="objc">
- (IBAction)testPressed {
	
	CalculatorBrain *testBrain = [self brain];

	// Setup the brain
	[testBrain pushVariable:@"a"];
	[testBrain pushVariable:@"a"];
	[testBrain pushOperation:@"*"];
	[testBrain pushVariable:@"b"];
	[testBrain pushVariable:@"b"];
	[testBrain pushOperation:@"*"];
	[testBrain pushOperation:@"+"];
	[testBrain pushOperation:@"sqrt"];	
	
	// Retrieve the program
	NSArray *program = testBrain.program;
	
	// Setup the dictionary
	NSDictionary *dictionary = 
	[NSDictionary dictionaryWithObjectsAndKeys:
	 [NSNumber numberWithDouble:3], @"a",
	 [NSNumber numberWithDouble:4], @"b", nil];
	
	// Run the program with variables
	NSLog(@"Running the program with variables returns the value %g",
			[CalculatorBrain runProgram:program usingVariableValues:dictionary]);

	// List the variables in program	
	NSLog(@"Variables in program are %@", 
			[[CalculatorBrain variablesUsedInProgram:program] description]);			
}
</code>
Seems to work :-)

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>311</wp:post_id>
		<wp:post_date>2012-03-13 09:53:36</wp:post_date>
		<wp:post_date_gmt>2012-03-13 09:53:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>assignment-2-task1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="all-assignments"><![CDATA[All assignments]]></category>
		<category domain="post_tag" nicename="assignment-2"><![CDATA[assignment 2]]></category>
		<category domain="post_tag" nicename="cs193p"><![CDATA[CS193p]]></category>
		<category domain="post_tag" nicename="fall-2011"><![CDATA[fall 2011]]></category>
		<category domain="post_tag" nicename="rpn-calculator"><![CDATA[RPN calculator]]></category>
		<category domain="post_tag" nicename="stanford-university"><![CDATA[stanford university]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>s2mail</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>178</wp:comment_id>
			<wp:comment_author><![CDATA[Steve]]></wp:comment_author>
			<wp:comment_author_email>steve@steveives.co.uk</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>145.64.134.241</wp:comment_author_IP>
			<wp:comment_date>2012-06-01 09:39:17</wp:comment_date>
			<wp:comment_date_gmt>2012-06-01 09:39:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It seems to me that runProgram should really take the passed stack, and start at the bottom, popping things off and pushing them onto a new stack, which it executes as before. This simulates a user entering the operations and operands.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>177</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>18</wp:comment_id>
			<wp:comment_author><![CDATA[mani]]></wp:comment_author>
			<wp:comment_author_email>greatmani99@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>122.167.83.226</wp:comment_author_IP>
			<wp:comment_date>2012-03-16 04:00:40</wp:comment_date>
			<wp:comment_date_gmt>2012-03-16 04:00:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[HI Thanks for explanation, i have a quick question on understanding of the requirements.  basically, what  is the purpose of the "Test 1", "Test 2", "Test 3" buttons, and how do we supply the the value of the variables x,a,b? basically in the calculator i can enter aa*bb*+sqrt, but how do i supply the values of a,b after i entered in the calculator? this is some what confusing me.

Again, thanks for the detail explation]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>19</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.i4-apps.com</wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-03-16 15:00:29</wp:comment_date>
			<wp:comment_date_gmt>2012-03-16 15:00:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Mani - thanks for posting.

My understanding is that the Test buttons are used as a mechanism by which a user can set values for parameters that are part of a program. 

This post only covers task 1 of the assignment, which doesn't include that mechanism. Task 2 can be found <a href=http://www.i4-apps.com/assignment-2-task2/ rel="nofollow">here</a>, and the bit that does show the mechanism for how the different test values can be supplied (Task 3) can be found <a href="http://www.i4-apps.com/assignment-2-completion/" rel="nofollow">here.</a> 

Hope that helps...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>18</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>20</wp:comment_id>
			<wp:comment_author><![CDATA[Diego]]></wp:comment_author>
			<wp:comment_author_email>digoyox@yahoo.es</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>85.55.103.185</wp:comment_author_IP>
			<wp:comment_date>2012-04-11 16:13:35</wp:comment_date>
			<wp:comment_date_gmt>2012-04-11 16:13:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[i4-apps is the response to my pride.

I am working by myself on standford iOS programming course, and your post is really helpful


Thanks !!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>21</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-04-14 14:25:35</wp:comment_date>
			<wp:comment_date_gmt>2012-04-14 14:25:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>20</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>22</wp:comment_id>
			<wp:comment_author><![CDATA[JD]]></wp:comment_author>
			<wp:comment_author_email>jayc707@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>99.24.160.18</wp:comment_author_IP>
			<wp:comment_date>2012-04-24 05:30:26</wp:comment_date>
			<wp:comment_date_gmt>2012-04-24 05:30:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for your post!   It helped answer a lot of my question. 

In the for() loop in the runProgram method, could you please elaborate why you test the value as an instance of NSNumber and then setting it to zero?

Cheers]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>23</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-04-24 16:51:27</wp:comment_date>
			<wp:comment_date_gmt>2012-04-24 16:51:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi - glad the post helped :-)

Hmmâ¦ I'm not entirely sure why I put this in now. I think I thought it might be possible for a user to put non numbers in the variableValues dictionary, and I guess it's providing some protection against that. Now I look at it again, it does seem unnecessary and perhaps undesirable evenâ¦.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>22</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>24</wp:comment_id>
			<wp:comment_author><![CDATA[JD]]></wp:comment_author>
			<wp:comment_author_email>jayc707@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>99.24.160.18</wp:comment_author_IP>
			<wp:comment_date>2012-04-25 02:14:23</wp:comment_date>
			<wp:comment_date_gmt>2012-04-25 02:14:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good enough for me. Thanks again.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>23</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>177</wp:comment_id>
			<wp:comment_author><![CDATA[Steve]]></wp:comment_author>
			<wp:comment_author_email>steve@steveives.co.uk</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>145.64.134.241</wp:comment_author_IP>
			<wp:comment_date>2012-06-01 09:36:59</wp:comment_date>
			<wp:comment_date_gmt>2012-06-01 09:36:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,

I was working on this last night. One thing I was wondering about is how the calculatorBrain is supposed to be able to accept and run a stored program, a program being an array or stack of operands and operations.  

So let's say we want to perform the following calculation: 2, 3, 4, +, *

If you typed this into the calulator, the follwoing would happen:

2,3,4 get pushed onto the stack. 
You press +, and runProgram execiutes this and the stack now contains 2, 7
You press * and the stack now contains 14.

But I can't see how you can pass an array containing "2, 3, 4, +, *" to the brain, as runProgram would first try to execute the top operand i.e. "*" and to do this it would take the next two objects off the stack and try to multiply them and to push the result back onto the stack. These 2 objects are "+" and "4" which won't work.

Now the instruction has being doing this a lot longer than I have, as I assume that I'm missing somethings, but I'm not sure what.

Any ideas?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>179</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.i4-apps.com</wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-06-01 15:11:29</wp:comment_date>
			<wp:comment_date_gmt>2012-06-01 15:11:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[For your example it would work as follows:

1. Pop operand = *
    1.1 Pop operand = +
          1.1.1 Pop operand = 4
          1.1.2 Pop operand = 3
    1.2 Pop operand = 2

The key here is that the + operation completes before the * operation does. This is because <em>popOperandOffProgramStack</em> is being run recursively, so the second pop for the * operation happens after the two pops for the + operationâ¦.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>178</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>180</wp:comment_id>
			<wp:comment_author><![CDATA[Steve]]></wp:comment_author>
			<wp:comment_author_email>steve@steveives.co.uk</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>94.2.173.162</wp:comment_author_IP>
			<wp:comment_date>2012-06-01 23:23:31</wp:comment_date>
			<wp:comment_date_gmt>2012-06-01 23:23:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks David,

Had to think about it for a minute or two but I understand now:

I was thinking "OK - so * has to pop the next two operands off the stack, which are '+' and '4' which it can't multiply", but of course it calls the popOperandOfStack (pOOS) method, which firstly returns a '+', so it then calls pOOS again (twice) which gets '4' &amp; '3' respectively. So when it called pOOS for the first operand of the '*' operation it didn't get '+', it actually got '7'. (Thinking out loud here). 

The instructor doesn't go into much detail, leaving you to have to work things through yourself a lot.

Thanks again.

Steve]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>179</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>181</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.i4-apps.com</wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-06-02 08:45:40</wp:comment_date>
			<wp:comment_date_gmt>2012-06-02 08:45:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[no problem .. there is a lot of pOOPS going on :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>180</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>182</wp:comment_id>
			<wp:comment_author><![CDATA[Ron]]></wp:comment_author>
			<wp:comment_author_email>ronksa@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>79.179.210.38</wp:comment_author_IP>
			<wp:comment_date>2012-06-02 20:22:04</wp:comment_date>
			<wp:comment_date_gmt>2012-06-02 20:22:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,

First of all, thanks for your posts, really helps me with this course.

I have just one question:
In the assignment, it was asked that we keep the original runProgram method (the one that takes no dictionary). how do you determine in the controller which runProgram methos to use?
In fact, why even use the older version? it seems as though we can just use the newer one (the one with the dictionary) at all times, since it checks for the existense of variables).]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>183</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.i4-apps.com</wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-06-03 18:26:46</wp:comment_date>
			<wp:comment_date_gmt>2012-06-03 18:26:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi - yes it does look like the older <em>runProgram</em> is entirely unnecessary. My controller is calling the new version â¦. with no need for the older version at all.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>182</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>219</wp:comment_id>
			<wp:comment_author><![CDATA[Ben Dowling]]></wp:comment_author>
			<wp:comment_author_email>Rbd@visionsound.com</wp:comment_author_email>
			<wp:comment_author_url>http://Www.bendowling.com</wp:comment_author_url>
			<wp:comment_author_IP>64.134.237.40</wp:comment_author_IP>
			<wp:comment_date>2012-06-13 02:47:21</wp:comment_date>
			<wp:comment_date_gmt>2012-06-13 02:47:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks so much for your clarity and generosity.  I've been mulling over this for a couple days, and you've enlightened my understanding.

Thanks!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>223</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.i4-apps.com</wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-06-13 11:30:31</wp:comment_date>
			<wp:comment_date_gmt>2012-06-13 11:30:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for saying - glad you have found it useful :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>219</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Assignment 2: task2</title>
		<link>http://www.i4-apps.com/assignment-2-task2/</link>
		<pubDate>Tue, 13 Mar 2012 21:36:50 +0000</pubDate>
		<dc:creator>me</dc:creator>
		<guid isPermaLink="false">http://www.i4-apps.com/?p=364</guid>
		<description></description>
		<content:encoded><![CDATA[This second task develops the solution for the second assignment of the <a href="http://www.stanford.edu/class/cs193p/cgi-bin/drupal/" title="CS193p iPhone development homepage" target="_blank">Stanford CS193p</a> iOS Application Development course. As you might expect it follows on from my solution to <a href="http://www.i4-apps.com/assignment-2-task1/" title="Assignment 2: task1">Assignment 2: task1 :-)</a>

Let's rock...
<!--more-->
This proved to be another tricky task, requiring quite a bit of head scratching! Please let me know if you spot any mistakes or have any suggested improvements. To summarise the task:

<strong>Re-implement the <em>descriptionOfProgram:</em> method to display the passed program in a more user-friendly manner. Correctly and minimally manage parentheses in the output and enable output for multiple "things" on the stack</strong>

The new and updated methods that I added to the CalculatorBrain are as below:

<code lang="objc">
+ (NSString *)descriptionOfProgram:(id)program {	

	// Check program is valid and if not return message
	if (![self isValidProgram:program]) return @"Invalid program!";
	
	NSMutableArray *stack= [program mutableCopy];
	NSMutableArray *expressionArray = [NSMutableArray array];
	
	// Call recursive method to describe the stack, removing superfluous brackets at the
	// start and end of the resulting expression. Add the result into an expression array
	// and continue if there are still more items in the stack. 
	// our description Array, and if the 
	while (stack.count > 0) {
		[expressionArray addObject:[self deBracket:[self descriptionOffTopOfStack:stack]]];
	}
	
	// Return a list of comma seperated programs
	return [expressionArray componentsJoinedByString:@","];		 
}
</code>
... which calls through to the suggested <em>descriptionOffTopOfStack</em> method (hint #3).
<code lang="objc">
+ (NSString *)descriptionOffTopOfStack:(NSMutableArray *)stack {
	
	NSString *description;
	
	// Retrieve and remove the object at the top of the stack 
	id topOfStack = [stack lastObject];
	if (topOfStack) [stack removeLastObject]; else return @"";
	
	// If the top of stack is an NSNumber then just return it as a NSString
	if ([topOfStack isKindOfClass:[NSNumber class]]) {
		return [topOfStack description];
	}		
	// but if it's an NSString we need to do some formatting
	else if ([topOfStack isKindOfClass:[NSString class]]) {	
		// If top of stack is a no operand operation, or it's a variable then we
		// want to return description in the form "x"
		if (![self isOperation:topOfStack] ||
			 [self isNoOperandOperation:topOfStack]) {	
			description = topOfStack;
		} 
		// If the top of stack is one operand operation, then we want to return an
		// expression in the form "f(x)"
		else if ([self isOneOperandOperation:topOfStack]) {
			// We need to remove any outside brackets on the recursive description
			// because we are going to put some new brackets on.
			NSString *x = [self deBracket:[self descriptionOffTopOfStack:stack]];
			description = [NSString stringWithFormat:@"%@(%@)", topOfStack, x];	
		}
		// If the top of stack is a two operand operation then we want to return
		// an expression in the form "x op. y".
		else if ([self isTwoOperandOperation:topOfStack]) {
			NSString *y = [self descriptionOffTopOfStack:stack];
			NSString *x = [self descriptionOffTopOfStack:stack];
			
			// If the top of stack is For + and - we need to add brackets so that
			// we support precedence rules.  
			if ([topOfStack isEqualToString:@"+"] || 
				 [topOfStack isEqualToString:@"-"]) {				
				// String any existing brackets, before re-adding
				description = [NSString stringWithFormat:@"(%@ %@ %@)",
									[self deBracket:x], topOfStack, [self deBracket:y]];
			} 
			// Otherwise, we are dealing with * or / so no need for brackets
			else {
				description = [NSString stringWithFormat:@"%@ %@ %@",
									x, topOfStack ,y];
			}
		}		
	}
	return description ;		
}
</code>
It feels like there maybe a better to manage parenthesis simplification. It would be great to hear if you have a taken different approach. Anyway, my <em>deBracket</em> method to strip redundant parenthesis looks like:
<code lang="objc">
+ (NSString *)deBracket:(NSString *)expression {
	
	NSString *description = expression;
	
	// Check to see if there is a bracket at the start and end of the expression
	// If so, then strip the description of these brackets and return.
	if ([expression hasPrefix:@"("] && [expression hasSuffix:@")"]) {
		description = [description substringFromIndex:1];
		description = [description substringToIndex:[description length] - 1];
	}	
	
	// Also need to do a final check, to cover the case where removing the brackets
	// results in a + b) * (c + d. Have a look at the position of the brackets and
	// if there is a ) before a (, then we need to revert back to expression
	NSRange openBracket = [description rangeOfString:@"("];
	NSRange closeBracket = [description rangeOfString:@")"];
	
	if (openBracket.location <= closeBracket.location) return description;
	else return expression;	
}
</code>
... I'm not convinced about the method name either!

My test harness is an action in the Controller, triggered by a button press...
<code lang="objc">
- (IBAction)testPressed {
	
	CalculatorBrain *testBrain = [self brain];
	
	// Test a
	[testBrain empty];
	[testBrain pushOperand:3];
	[testBrain pushOperand:5];
	[testBrain pushOperand:6];
	[testBrain pushOperand:7];
	[testBrain pushOperation:@"+"];
	[testBrain pushOperation:@"*"];
	[testBrain pushOperation:@"-"];
	
	// Test b
	[testBrain pushOperand:3];
	[testBrain pushOperand:5];
	[testBrain pushOperation:@"+"];
	[testBrain pushOperation:@"sqrt"];
	
	// Test c
	//[testBrain empty];
	[testBrain pushOperand:3];
	[testBrain pushOperation:@"sqrt"];
	[testBrain pushOperation:@"sqrt"];
	
	// Test d
	[testBrain pushOperand:3];
	[testBrain pushOperand:5];
	[testBrain pushOperation:@"sqrt"];
	[testBrain pushOperation:@"+"];
	
	// Test e
	[testBrain pushOperation:@"?"];
	[testBrain pushVariable:@"r"];
	[testBrain pushVariable:@"r"];
	[testBrain pushOperation:@"*"];
	[testBrain pushOperation:@"*"];
	
	// Test f
	[testBrain pushVariable:@"a"];
	[testBrain pushVariable:@"a"];
	[testBrain pushOperation:@"*"];
	[testBrain pushVariable:@"b"];
	[testBrain pushVariable:@"b"];
	[testBrain pushOperation:@"*"];
	[testBrain pushOperation:@"+"];
	[testBrain pushOperation:@"sqrt"];
	
	//Print the description
	NSLog(@"Program is :%@",[CalculatorBrain descriptionOfProgram:[testBrain program]]);
}
</code>

Lovely jubbly... that's it for task2. I am beginning to feel more comfortable working with xCode and Objective C... so onwards and upwards :-)
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>364</wp:post_id>
		<wp:post_date>2012-03-13 21:36:50</wp:post_date>
		<wp:post_date_gmt>2012-03-13 21:36:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>assignment-2-task2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="all-assignments"><![CDATA[All assignments]]></category>
		<category domain="post_tag" nicename="assignment-2"><![CDATA[assignment 2]]></category>
		<category domain="post_tag" nicename="cs193p"><![CDATA[CS193p]]></category>
		<category domain="post_tag" nicename="fall-2011"><![CDATA[fall 2011]]></category>
		<category domain="post_tag" nicename="rpn-calculator"><![CDATA[RPN calculator]]></category>
		<category domain="post_tag" nicename="stanford-university"><![CDATA[stanford university]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>s2mail</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>25</wp:comment_id>
			<wp:comment_author><![CDATA[Phillip Kelly-Ayo]]></wp:comment_author>
			<wp:comment_author_email>kellyayo@hotmail.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://www.trans-ocracy.com</wp:comment_author_url>
			<wp:comment_author_IP>94.175.117.221</wp:comment_author_IP>
			<wp:comment_date>2012-04-03 11:11:20</wp:comment_date>
			<wp:comment_date_gmt>2012-04-03 11:11:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi David,

Could you please explain the origin of the isValidProgram: method.

Cheers]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>26</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-04-03 14:01:57</wp:comment_date>
			<wp:comment_date_gmt>2012-04-03 14:01:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ah.. looks like I left that method out â¦ 

isValidProgram look this :

<code lang="objc">
+ (BOOL)isValidProgram:(id)program {
	// It's valid if it's an NSArray
	return [program isKindOfClass:[NSArray class]];
}
</code>
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>25</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>27</wp:comment_id>
			<wp:comment_author><![CDATA[Robinson]]></wp:comment_author>
			<wp:comment_author_email>ffssddaa@naver.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>203.253.159.19</wp:comment_author_IP>
			<wp:comment_date>2012-04-10 01:51:26</wp:comment_date>
			<wp:comment_date_gmt>2012-04-10 01:51:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi David,

Could you please explain the origin of the
isNoOperandOperation
isOnewOperandOperation
isTwoOperandOperation
??]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>28</wp:comment_id>
			<wp:comment_author><![CDATA[Seth Vernon]]></wp:comment_author>
			<wp:comment_author_email>seth.vernon@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>174.253.17.87</wp:comment_author_IP>
			<wp:comment_date>2012-04-12 02:48:29</wp:comment_date>
			<wp:comment_date_gmt>2012-04-12 02:48:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[David- 

It was a relief to see someone working on this course that was actually organized.

I am a bit behind you in the assignments. I got caught cold in assignment 2 with the variables. So I just kept going with the lectures. 

I'm assuming that: isNoOperandOperation; isOneOperandOperation; isTwoOperandOperation
are class methods that need to be created, but I'm thinking that's overkill in the method department. Wouldn't it be easier to create one class method for one operand (which might be in the code already), and add or subtract from each method call?

but I am still getting my head around how to add variables in the running program. 

If I come up with a solution I will post it.

cheers]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-04-14 14:33:20</wp:comment_date>
			<wp:comment_date_gmt>2012-04-14 14:33:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It looks like I left these methods out of the postâ¦ They are used to assist with the de-bracketing function. Here they are:

<code lang="objc">
+ (BOOL)isNoOperandOperation:(NSString *)operation {
	// The set of operations requiring no operands
	NSSet * operationSet = [NSSet setWithObjects:@"?",nil];
	return [operationSet containsObject:operation];
}

+ (BOOL)isOneOperandOperation:(NSString *)operation {
	// The set of operations requiring one operands
	NSSet * operationSet = [NSSet setWithObjects:@"sin",@"cos",@"sqrt",@"Â±",nil];
	return [operationSet containsObject:operation];
}

+ (BOOL)isTwoOperandOperation:(NSString *)operation {
	// The set of operations requiring two operands
	NSSet * operationSet = [NSSet setWithObjects:@"+",@"-",@"*",@"/",nil];
	return [operationSet containsObject:operation];
}

+ (BOOL)isOperation:(NSString *)operation {	
	
	// Check to see if it's in any of our operation sets
	return 
	[self isNoOperandOperation:operation] ||
	[self isOneOperandOperation:operation]||
	[self isTwoOperandOperation:operation];
}
</code>

In assignment 3, we are asked to look at the performance of the application. It turned out that my implementation of these methods is slowing things down quite a bit! I make some improvements in a later post...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>27</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-04-14 14:39:45</wp:comment_date>
			<wp:comment_date_gmt>2012-04-14 14:39:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the feedback Seth.

These methods are not explicitly part of the assignment - they are of my own making :-). Unfortunately I left them out of the post by mistake - my assignment 2 implementation of them is as in previous commentâ¦.

Be good to know if there is a more efficient way this can be done though - I didn't quite follow what you were saying about using one class methodâ¦ Would be great to see an alternative solution if you come up with one...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>28</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>31</wp:comment_id>
			<wp:comment_author><![CDATA[Seth Vernon]]></wp:comment_author>
			<wp:comment_author_email>seth.vernon@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>67.167.96.55</wp:comment_author_IP>
			<wp:comment_date>2012-04-17 00:39:05</wp:comment_date>
			<wp:comment_date_gmt>2012-04-17 00:39:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yes, I'm not sure of an alternate to these methods. I am still trying to debug my Assignment 2 completion. But I will go back and see as this course progresses. Perhaps we could add them to a block.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>28</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-04-17 08:40:35</wp:comment_date>
			<wp:comment_date_gmt>2012-04-17 08:40:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I haven't quite got to blocks yet in my objective C bookâ¦ :-). I did revisit these methods as part of performance tuning in assignment 3, so they' re certainly not ideally written in my assignment 2 code. 

Good luck with debugging!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>31</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33</wp:comment_id>
			<wp:comment_author><![CDATA[pambo]]></wp:comment_author>
			<wp:comment_author_email>pambospalas@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.34.218.226</wp:comment_author_IP>
			<wp:comment_date>2012-04-18 23:40:08</wp:comment_date>
			<wp:comment_date_gmt>2012-04-18 23:40:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for sharing, and very interesting approach! I took a slightly different path which involved adding the brackets when necessary rather than removing later.  

For double operand operators in descriptionOfTopOfStack I did the following: 
<code lang="objc">
//Double operands (i.e. x+y, x/y etc)
        else if([self isDoubleOperandOperation:topOfStack])
        {
            NSString *lastElement = [self descriptionOfTopOfStack:stack];
            NSString *currentElement = [self descriptionOfTopOfStack:stack];
            
            if([self requiresBrackets:currentElement] )
            {
                currentElement = [NSString stringWithFormat:@"(%@)",currentElement]; 
            }
            if( [self requiresBrackets:lastElement])
            {
                lastElement = [NSString stringWithFormat:@"(%@)" ,lastElement  ]; 
            }
            expression = [NSString stringWithFormat:@"%@%@%@",currentElement,topOfStack, lastElement  ]; 
            
        }
</code>

and the method requiresBrackets: is as follows:  

<code lang="objc">
+(BOOL)requiresBrackets:(NSString *)searchExpression
{
    BOOL bracketsRequired = NO;    
    NSRange plus = [searchExpression rangeOfString:@"+"]; 
    NSRange minus = [searchExpression rangeOfString:@"-"]; 
    
    if(( plus.location != NSNotFound) || (minus.location != NSNotFound))
    {
        bracketsRequired = YES;  
    }
    return bracketsRequired;   
}
</code>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>34</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-04-24 17:01:12</wp:comment_date>
			<wp:comment_date_gmt>2012-04-24 17:01:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I think I follow your approachâ¦. if the expression is for example 5 + 3, does your implementation show 5 + 3 or (5+3) - i.e. with superfluous bracketsâ¦ I think this is avoided with the de-bracketing approachâ¦]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>33</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>61</wp:comment_id>
			<wp:comment_author><![CDATA[pambo]]></wp:comment_author>
			<wp:comment_author_email>pambospalas@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.34.218.226</wp:comment_author_IP>
			<wp:comment_date>2012-04-28 13:33:38</wp:comment_date>
			<wp:comment_date_gmt>2012-04-28 13:33:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey, thanks for the reply! No, it would only show "5+3" (without superfluous brackets). BUT I now see that further down the line it could include some superfluous brackets.. it passed the assignment criteria, but if the calculation gets any longer than the examples given, the chances are it will include some extra brackets.. I think I might change it!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>34</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>65</wp:comment_id>
			<wp:comment_author><![CDATA[pambo]]></wp:comment_author>
			<wp:comment_author_email>pambospalas@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.34.218.226</wp:comment_author_IP>
			<wp:comment_date>2012-04-28 14:42:04</wp:comment_date>
			<wp:comment_date_gmt>2012-04-28 14:42:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Actually David,  can I ask you (if you can be bothered that is!) to tell me what your calculator outputs for the following commands: 

6 E 9 E 5 E 9 E 6 + * / / 

I'm not entirely sure but I think there may be a small bug..]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>67</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-04-28 15:38:34</wp:comment_date>
			<wp:comment_date_gmt>2012-04-28 15:38:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I get an output display of 6 / 9 / 5 * (9+6) and a result of 50.  As you say, It does look like a bug - thanks for highlighting.
 
I've added an additional else clause to support precedence rules for "/" :

<code lang="objc">
} else if ([topOfStack isEqualToString:@"/"]) {
    // We want to bracket the y operand before the new operation
    description = [NSString stringWithFormat:@"%@ %@ (%@)", 
		    x, topOfStack,[self deBracket:y]];
}
</code>
I think it works ok now for your test caseâ¦]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>65</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>70</wp:comment_id>
			<wp:comment_author><![CDATA[pambo]]></wp:comment_author>
			<wp:comment_author_email>pambospalas@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.34.218.226</wp:comment_author_IP>
			<wp:comment_date>2012-04-28 17:02:47</wp:comment_date>
			<wp:comment_date_gmt>2012-04-28 17:02:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I actually had a similar problem with the code I uploaded here.. I didn't handle those cases either! A fix like that seems ok, however you should handle the other case  too when x needs to be wrapped in brackets. 

also, im thinking would there be a problem when you do something like: 

4 E 5 E + 3 E 4 E + / 

or is it ok? 

I've adopted your method (thanks! :D) and used it with the method I have above to (hopefully) handle all cases.. still trying to see if everything is covered lol]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>67</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>71</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.i4-apps.com</wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-04-28 18:06:42</wp:comment_date>
			<wp:comment_date_gmt>2012-04-28 18:06:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I had to make a minor modification to de-bracket , but I think 4 E 5 E + 3 E 4 E + / displays ok as (4+5) / (3+4).

Do you have an example of a case where * causes a problem? Also link for your uploaded code isn't working ...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>70</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>72</wp:comment_id>
			<wp:comment_author><![CDATA[pambo]]></wp:comment_author>
			<wp:comment_author_email>pambospalas@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.34.218.226</wp:comment_author_IP>
			<wp:comment_date>2012-04-28 19:30:50</wp:comment_date>
			<wp:comment_date_gmt>2012-04-28 19:30:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey David,  sorry, I wrote my last post in a hurry and it wasn't clear at all.. I didn't mean that I uploaded code - I was referring to the code I posted at the top of this post! Also, with "x" I wasn't referring to multiplication, but to the variable in the code.. i.e. with the fix you handle cases for the y variable 

description = [NSString stringWithFormat:@"%@ %@ (%@)", 
          x, topOfStack,[self deBracket:y]];

but perhaps you need to handle the other cases too for x:  

description = [NSString stringWithFormat:@"(%@) %@ %@", 
          [self deBracket:x], topOfStack,y];

at least thats what I had to do on my end, I'm not sure if its taken care otherwise in your code.   
A good way to test might be by trying: 

5 E 6 E 9 E //    and     5 E 6 / 9 E / 

The answer should be different in each case!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>71</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>73</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.i4-apps.com</wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-04-28 20:00:22</wp:comment_date>
			<wp:comment_date_gmt>2012-04-28 20:00:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ah.. my mistake. I read your post in too much of a hurry :-). 

I think it works for me ok for the two tests, the results I get are:
5 / (6 / (9)) and 5 / (6) / (9) 

... seems ok, albeit with some more superfluous brackets (which I can't seem to find an easy way to get rid of!). Something for another day maybe :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>72</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>74</wp:comment_id>
			<wp:comment_author><![CDATA[pambo]]></wp:comment_author>
			<wp:comment_author_email>pambospalas@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.34.218.226</wp:comment_author_IP>
			<wp:comment_date>2012-04-29 00:11:34</wp:comment_date>
			<wp:comment_date_gmt>2012-04-29 00:11:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[yeah, its been quite a headache to be honest! Thanks for sharing everything though, its been great reading your blog and discussing different ideas  :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>73</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Assignment 2: completion</title>
		<link>http://www.i4-apps.com/assignment-2-completion/</link>
		<pubDate>Thu, 15 Mar 2012 12:24:15 +0000</pubDate>
		<dc:creator>me</dc:creator>
		<guid isPermaLink="false">http://www.i4-apps.com/?p=394</guid>
		<description></description>
		<content:encoded><![CDATA[Below is my solution for tasks 3,4 & 5 and the extra credit, for the second assignment of the <a href="http://www.stanford.edu/class/cs193p/cgi-bin/drupal/" title="Stanford University CS193p homepage" target="_blank">Fall 2011 CS193p lecture series</a> taught by Paul Hegarty. It follows on from my previous postings, <a href="http://www.i4-apps.com/assignment-2-task1/" title="Assignment 2: task1">Assignment2: task1</a> and <a href="http://www.i4-apps.com/assignment-2-task2/" title="Assignment 2: task2">Assignment2: task2</a>.

These tasks required a pretty much wholesale re-factor of the Controller class. I didn't really get what the assignment was all about until I had completed, and once I'd finished, the amount of code didn't seem to justify the hours spent! Less is clearly more :-).

So, if your mouse still has some click....
<!--more-->
<strong>3. Update the user-interface to test out the new model.
</br>
a. Your UI should already have a UILabel which shows what has been sent to the brain. Change it to now always show the latest description of the program currently in the CalculatorBrain using your descriptionOfProgram:method. It should show the description without substituting variable values (obviously, since descriptionOfProgram: does not take a variable value dictionary as an argument).</strong>

The <em>descriptionOfProgram</em> method was implemented in <a href="http://www.i4-apps.com/assignment-2-task2/" title="Assignment 2: task2">Assignment2: task2</a>. Changing the Controller to use this method is a matter of changing any "<em>self.[outlet].text =</em>" code. My outlet is called <em>calculation</em>, so I've updated the <em>"self.calculation.text ="</em> through the Controller, whenever a brain function is called.
<code lang="objc" highlight="10,11,12">
-(void)synchronizeView {	
	// Find the result by running the program passing in the test variable values
	id result = [CalculatorBrain runProgram:self.brain.program 
								usingVariableValues:self.testVariableValues];	
	
	// If the result is a string, then display it, otherwise get the Number's description
	if ([result isKindOfClass:[NSString class]])	self.display.text = result;
	else self.display.text = [NSString stringWithFormat:@"%g", [result doubleValue]];
	
	// Now the calculation label, from the latest description of program	
	self.calculation.text = 
		[CalculatorBrain descriptionOfProgram:self.brain.program];
	
	// And finally the variables text, with a bit of formatting
	self.variables.text = [[[[[[[self programVariableValues] description]
										stringByReplacingOccurrencesOfString:@"{" withString:@""]
									  stringByReplacingOccurrencesOfString:@"}" withString:@""]
									 stringByReplacingOccurrencesOfString:@";" withString:@""]
									stringByReplacingOccurrencesOfString:@"\"" withString:@""]
								  stringByReplacingOccurrencesOfString:@"<null>" withString:@"0"];
	
	// And the user isn't in the middle of entering a number
	self.userIsInTheMiddleOfEnteringNumber = NO;
}
</code>
</br>
<strong>b. Add a few variable buttons (e.g, x, y, foo). These are buttons that push a variable into the CalculatorBrain.</strong>
<code lang="objc" highlight="2">
- (IBAction)variablePressed:(UIButton *)sender {
	[self.brain pushVariable:sender.currentTitle];
	[self synchronizeView];
}
</code>
</br>
<strong>c. Change your calculator to update its display (as needed) by calling your new runProgram:usingVariableValues: method. The variable values dictionary it passes to this method should be a property in your Controller (letâs call it âtestVariableValuesâ).
</strong>
In a similar way as before, we now change the assignment of "self.display.text", updating whenever a brain message has been sent.
<code lang="objc" highlight="2,3,4,5,6,7,8">
-(void)synchronizeView {	
	// Find the result by running the program passing in the test variable values
	id result = [CalculatorBrain runProgram:self.brain.program 
								usingVariableValues:self.testVariableValues];	
	
	// If the result is a string, then display it, otherwise get the Number's description
	if ([result isKindOfClass:[NSString class]])	self.display.text = result;
	else self.display.text = [NSString stringWithFormat:@"%g", [result doubleValue]];
	
	// Now the calculation label, from the latest description of program	
	self.calculation.text = 
		[CalculatorBrain descriptionOfProgram:self.brain.program];
	
	// And finally the variables text, with a bit of formatting
	self.variables.text = [[[[[[[self programVariableValues] description]
										stringByReplacingOccurrencesOfString:@"{" withString:@""]
									  stringByReplacingOccurrencesOfString:@"}" withString:@""]
									 stringByReplacingOccurrencesOfString:@";" withString:@""]
									stringByReplacingOccurrencesOfString:@"\"" withString:@""]
								  stringByReplacingOccurrencesOfString:@"<null>" withString:@"0"];
	
	// And the user isn't in the middle of entering a number
	self.userIsInTheMiddleOfEnteringNumber = NO;
}
</code>
</br></br>
<strong>d. Add a UILabel to your UI whose contents are determined by iterating through all the variablesUsedInProgram: and displaying each with its current value from testVariableValues. Example display: âx = 5 y = 4.8 foo = 0â.</strong>

A new label with a new outlet. I called mine <em>variables</em>. We need to update this new label whenever something that effects variables changes in the brain. (E.g. A new variable is pushed, the brain is cleared or a variable changes it's value).
<code lang="objc" highlight="14,15,16,17,18,19,20">
-(void)synchronizeView {	
	// Find the result by running the program passing in the test variable values
	id result = [CalculatorBrain runProgram:self.brain.program 
								usingVariableValues:self.testVariableValues];	
	
	// If the result is a string, then display it, otherwise get the Number's description
	if ([result isKindOfClass:[NSString class]])	self.display.text = result;
	else self.display.text = [NSString stringWithFormat:@"%g", [result doubleValue]];
	
	// Now the calculation label, from the latest description of program	
	self.calculation.text = 
		[CalculatorBrain descriptionOfProgram:self.brain.program];
	
	// And finally the variables text, with a bit of formatting
	self.variables.text = [[[[[[[self programVariableValues] description]
										stringByReplacingOccurrencesOfString:@"{" withString:@""]
									  stringByReplacingOccurrencesOfString:@"}" withString:@""]
									 stringByReplacingOccurrencesOfString:@";" withString:@""]
									stringByReplacingOccurrencesOfString:@"\"" withString:@""]
								  stringByReplacingOccurrencesOfString:@"<null>" withString:@"0"];
	
	// And the user isn't in the middle of entering a number
	self.userIsInTheMiddleOfEnteringNumber = NO;
}
</code>
The real work is hidden in programVariableValues, which looks like this.
<code lang="objc">
- (NSDictionary *)programVariableValues {	

	// Find the variables in the current program in the brain as an array
	NSArray *variableArray = 
		[[CalculatorBrain variablesUsedInProgram:self.brain.program] allObjects];
		 
	// Return a description of a dictionary which contains keys and values for the keys 
	// that are in the variable array
	return [self.testVariableValues dictionaryWithValuesForKeys:variableArray];
}
</code>
</br></br>
<strong>e. Add a few different âtestâ buttons which set testVariableValues to some preset testing values. One of them should set testVariableValues to nil. Donât forget to update the rest of your UI when you change testVariableValues by pressing one of these test buttons. Make sure that your preset values are good edge-cases for testing (we are intentionally not telling you what to use since part of good programming is figuring out how to thoroughly test your application).</strong>

I added some tests each linked to a new button.
<code lang="objc">
// Some different numbers to the defaults
- (IBAction)test1Pressed {
	self.testVariableValues = [NSDictionary dictionaryWithObjectsAndKeys:
										[NSNumber numberWithDouble:-4], @"x",
										[NSNumber numberWithDouble:3], @"a",
										[NSNumber numberWithDouble:4], @"b", nil];
	[self synchronizeView];
}

// Testing when only one number is provided
- (IBAction)test2Pressed {
	self.testVariableValues = [NSDictionary dictionaryWithObjectsAndKeys:
										[NSNumber numberWithDouble:-5], @"x", nil];
	[self synchronizeView];	
}

// Should revert back to default values
- (IBAction)testNilPressed {
	self.testVariableValues = nil;	
	[self synchronizeView];
}
</code>
Works for me :-).
</br></br>
<strong>4. Add an Undo button to your calculator.</strong>
This seemed to me to be an extension to the existing backspace functionality. 
<code lang="objc">
- (IBAction)undoPressed {
	if (self.userIsInTheMiddleOfEnteringNumber) {
		// Remove the last digit or point from the display
		self.display.text =[self.display.text substringToIndex:
								  [self.display.text length] - 1]; 
	
		// If we are left with no digits or a "-" digit
		if ( [self.display.text isEqualToString:@""]
		 || [self.display.text isEqualToString:@"-"]) {
		
			[self synchronizeView];		
		}	
	} else {
		// Remove the last item from the stack and synchronize the view
		[self.brain removeLastItem];
		[self synchronizeView];
	}	
}
</code>
<em>synchronizeView</em> is shown in the earlier code snippets. I call this method, whenever a change is made to the brain, and additionally this case if we have run out digits to undo. We do need a new method in the CalculatorBrain to enable the last item to be removed from the stack.
<code lang="objc">
- (void)removeLastItem {
	[self.programStack removeLastObject];
}
</code>
</br></br>
<strong>5. Donât let anything crash your program in CalculatorBrain. It should defend against any value being passed through its API.</strong>

Goes without saying :-). Hmm...
</br></br>
<strong>Extra Credit
Enhance your application to show the user error conditions like divide by zero, square root of a negative number, and insufficient operands.</strong>

The guts of this is to change the <em>popOperandOffProgramStack</em> method in the CalculatorBrain to support returning an id, as suggested in the Assignment. Mine now looks like this:
<code lang="objc">
+ (id)popOperandOffProgramStack:(NSMutableArray *) stack {
	
	NSString * INSUFFICIENT_OPERANDS = @"Insufficient operands!";
	NSString * INVALID_OPERATION = @"Operation not implemented!";
	
	double result = 0;
	
	id topOfStack = [stack lastObject];
	if (topOfStack) [stack removeLastObject]; else return @"0";
	
	// If it's a number then just return it
	if ([topOfStack isKindOfClass:[NSNumber class]]) return topOfStack;		
	
	//Otherwise it's a string
	NSString *operation = topOfStack;
	
	// First check the no operand operations
	if ([operation isEqualToString:@"?"]) { 
		result = M_PI;
	} // Next the one operand operations
	else if ([self isOneOperandOperation:operation]) {
		id operand1 = [self popOperandOffProgramStack:stack];
		// If the operand is a number then ok, otherwise we have insufficient operands
		if ([operand1 isKindOfClass:[NSNumber class]]) {
			// Go ahead and do the operations
			if ([operation isEqualToString:@"sin"]) {
				result = sin ([operand1 doubleValue]); 
			} else if ([operation isEqualToString:@"cos"]) {
				result = cos ([operand1 doubleValue]);
			} else if ([operation isEqualToString:@"sqrt"]) {
				result = sqrt([operand1 doubleValue]);
			} else if ([operation isEqualToString:@"Â±"]) {
				result = [operand1 doubleValue] * -1;	
			} 
		} else return INSUFFICIENT_OPERANDS;			
	} // A two operand operation methinks...
	else if ([self isTwoOperandOperation:operation]) {
		id operand1 = [self popOperandOffProgramStack:stack];
		id operand2 = [self popOperandOffProgramStack:stack];	
		// Both operands need to be numbers, or we are out of operands
		if ([operand1 isKindOfClass:[NSNumber class]] &&
			 [operand2 isKindOfClass:[NSNumber class]]) {
			// Do the operations
			if ([operation isEqualToString:@"+"]) {
				result = [operand2 doubleValue] + [operand1 doubleValue]; 
			} else if ([@"*" isEqualToString:operation]) {
				result = [operand2 doubleValue] * [operand1 doubleValue];
			} else if ([operation isEqualToString:@"-"]) {
				result = [operand2 doubleValue] - [operand1 doubleValue];
			} else if ([operation isEqualToString:@"/"]) {
				result = [operand2 doubleValue] / [operand1 doubleValue];
			}
		} else return INSUFFICIENT_OPERANDS;
	} else return INVALID_OPERATION;
	
	return [NSNumber numberWithDouble:result];
}
</code>
<em>synchronizeView</em> manages the introspection of the return value to display appropriately to user. It all works fine for insufficient operands, and for divide by zero and root of a negative it seems ok to me to return "NaN" or "Inf", which the system seems to do automatically....
</br>
And that's it for assignment two. My calculator now looks like this.

<center><img src="http://i4-apps.com/wp-content/uploads/2012/04/assignment2.tiff" alt="screenshot of calculator at the end of Assignment 2" /></center>
Hurrah! 

Please let me know any comments, suggestions, improvements or tips that you may have :-).











]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>394</wp:post_id>
		<wp:post_date>2012-03-15 12:24:15</wp:post_date>
		<wp:post_date_gmt>2012-03-15 12:24:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>assignment-2-completion</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="all-assignments"><![CDATA[All assignments]]></category>
		<category domain="post_tag" nicename="assignment-2"><![CDATA[assignment 2]]></category>
		<category domain="post_tag" nicename="calculator"><![CDATA[calculator]]></category>
		<category domain="post_tag" nicename="cs193p"><![CDATA[CS193p]]></category>
		<category domain="post_tag" nicename="fall-2011"><![CDATA[fall 2011]]></category>
		<category domain="post_tag" nicename="stanford-university"><![CDATA[stanford university]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[assignment-2-finale]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>s2mail</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>35</wp:comment_id>
			<wp:comment_author><![CDATA[mr curious]]></wp:comment_author>
			<wp:comment_author_email>woodydaniel@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>41.134.17.129</wp:comment_author_IP>
			<wp:comment_date>2012-03-26 12:54:22</wp:comment_date>
			<wp:comment_date_gmt>2012-03-26 12:54:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Awesome work!
Was just wondering, after you changed your popOperandOffProgramStack to return an id, do you not need to change your performOperation and runProgram methods to return an id as well?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.i4-apps.com</wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-03-26 13:09:59</wp:comment_date>
			<wp:comment_date_gmt>2012-03-26 13:09:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[hi mr curious - thanks for the comment.

As you say, you do need to change performOperation and the runProgram methods too, to ensure that they also return id. I forgot to mention that :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>35</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37</wp:comment_id>
			<wp:comment_author><![CDATA[Haris]]></wp:comment_author>
			<wp:comment_author_email>haris.kapagioridis@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>65.111.48.162</wp:comment_author_IP>
			<wp:comment_date>2012-03-28 19:28:26</wp:comment_date>
			<wp:comment_date_gmt>2012-03-28 19:28:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you very much,i did assignment 1 by my self and was hard for me to do assignment 2 and i was searching for a solution-explanation to study and understand.

you were very helpful thanks again]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.i4-apps.com</wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-03-28 19:32:24</wp:comment_date>
			<wp:comment_date_gmt>2012-03-28 19:32:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Glad it was of some help :-) ... Assignment 3 is coming soon...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>37</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>39</wp:comment_id>
			<wp:comment_author><![CDATA[Phillip Kelly-Ayo]]></wp:comment_author>
			<wp:comment_author_email>kellyayo@hotmail.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://www.trans-ocracy.com</wp:comment_author_url>
			<wp:comment_author_IP>94.175.117.221</wp:comment_author_IP>
			<wp:comment_date>2012-04-05 19:46:55</wp:comment_date>
			<wp:comment_date_gmt>2012-04-05 19:46:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great tutorial.  Thanks David!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>40</wp:comment_id>
			<wp:comment_author><![CDATA[Mark Nichols]]></wp:comment_author>
			<wp:comment_author_email>mark.nichols@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>129.130.34.83</wp:comment_author_IP>
			<wp:comment_date>2012-04-09 20:45:37</wp:comment_date>
			<wp:comment_date_gmt>2012-04-09 20:45:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[When are you calling synchronizeView()? I've read through the progress you've made on both assignment 1 and 2 and I don't see where you created this method, or when you utilize it. 

My approach to these assignments has been slightly different than yours in that I refresh the calculator result directly from operationPressed(). I suspect that you are calling synchronizeView from operationPressed().

Excellent breakdown of you solution to the problems within the assignments.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>41</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-04-14 15:58:30</wp:comment_date>
			<wp:comment_date_gmt>2012-04-14 15:58:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,

I am calling <em>synchroniseView()</em> whenever the brain gets updated -  I think in <em>operationPressed</em>, <em>clearPressed</em>, <em>variablePressed</em> and <em>enterPressed</em>. I started off doing any updates to the view in the individual methods, but in the end figured it would be better to abstract to a single method and then just call this whenever the view needs to be synchronised with the model â¦ ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>40</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>42</wp:comment_id>
			<wp:comment_author><![CDATA[Scott]]></wp:comment_author>
			<wp:comment_author_email>Sfehrman@me.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>99.22.84.177</wp:comment_author_IP>
			<wp:comment_date>2012-04-25 02:14:53</wp:comment_date>
			<wp:comment_date_gmt>2012-04-25 02:14:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Were / how did you declare "testVariableValues" I'm trying to use property and synthesize but I'm getting compile error.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>43</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-04-25 15:08:33</wp:comment_date>
			<wp:comment_date_gmt>2012-04-25 15:08:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,

I declared in the private interface of CalculatorViewController.

<code lang="objc">
@property (nonatomic, strong) NSDictionary *testVariableValues;
</code>

What compile error are you getting?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>42</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>77</wp:comment_id>
			<wp:comment_author><![CDATA[Scott]]></wp:comment_author>
			<wp:comment_author_email>sfehrman@me.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>99.22.84.177</wp:comment_author_IP>
			<wp:comment_date>2012-04-30 03:22:09</wp:comment_date>
			<wp:comment_date_gmt>2012-04-30 03:22:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Turns out the problem was something else ... I still had a method returning "String" instead of "id".  Working now ... great articles, very helpful, keep going.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>43</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>87</wp:comment_id>
			<wp:comment_author><![CDATA[Andy]]></wp:comment_author>
			<wp:comment_author_email>andy@andyjordan.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>193.104.113.26</wp:comment_author_IP>
			<wp:comment_date>2012-05-03 08:26:59</wp:comment_date>
			<wp:comment_date_gmt>2012-05-03 08:26:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks David for posting your solutions. Keep up the good work!

It's extremely useful, when I get stuck to take a peek at someone else's solution. It's interesting to see both how you have done something a bit differently to me and where our solutions are similar.

Are you going to continue through to the end of the course?

Thanks,
Andy]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>88</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.i4-apps.com</wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-05-03 08:40:17</wp:comment_date>
			<wp:comment_date_gmt>2012-05-03 08:40:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks Andy - always good to hear that people are finding it useful! Feel free to comment on any differences between our solutions - especially where you prefer your own :-) 

Yes, I am hoping to continue through, maybe at a at slower pace though. Will have to see to how things go.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>87</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>104</wp:comment_id>
			<wp:comment_author><![CDATA[Jonathan]]></wp:comment_author>
			<wp:comment_author_email>shred444@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>66.31.246.39</wp:comment_author_IP>
			<wp:comment_date>2012-05-05 20:38:14</wp:comment_date>
			<wp:comment_date_gmt>2012-05-05 20:38:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey David, I'm taking the class through iTunes U and found your blog incredibly useful.  So thanks for your dedication to posting.

In the beginning of my synchronize view function, I'm running the program, and the return type of the program is a double.  Since I'm storing this into a variable called result (which is type id), I'm getting an error.  But I didnt think this would give me an error.  Any ideas?

<code>
id result = [CalculatorBrain runProgram:self.brain.program usingVariables:self.testVariables];
</code>


initializing '__Strong id' with an expression of incompatible type 'double'
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>107</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.i4-apps.com</wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-05-06 19:44:53</wp:comment_date>
			<wp:comment_date_gmt>2012-05-06 19:44:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Jonathan,

My implementation for runProgram is returning an id, not a double - so I am not getting the error.As I understand it, the type <em>id</em> can be used to store a pointer to any object. I don't think you can point a variable of type id to a double (or a float, int, char etc...) because these data types are stored as values not pointers to valuesâ¦..]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>104</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>117</wp:comment_id>
			<wp:comment_author><![CDATA[Jonathan]]></wp:comment_author>
			<wp:comment_author_email>shred444@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>66.31.246.39</wp:comment_author_IP>
			<wp:comment_date>2012-05-08 22:49:16</wp:comment_date>
			<wp:comment_date_gmt>2012-05-08 22:49:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[makes sense.  I found out later that more of the code was changed to return IDs rather than dbls.  You're right, these last few tasks do require a major code overhaul to complete them.  Thanks again for posting this.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>107</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>158</wp:comment_id>
			<wp:comment_author><![CDATA[Beginner in iOs]]></wp:comment_author>
			<wp:comment_author_email>csharpdeveloper9@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>98.155.30.73</wp:comment_author_IP>
			<wp:comment_date>2012-05-20 22:50:56</wp:comment_date>
			<wp:comment_date_gmt>2012-05-20 22:50:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi David,
 
I am a beginner in iOS programming. I have the same error because I have two methods called 'runProgram' and both return a double instead of an (id). Could you share your thoughts on this?

Thanks!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>160</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.i4-apps.com</wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-05-21 16:30:04</wp:comment_date>
			<wp:comment_date_gmt>2012-05-21 16:30:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,
I think that you need to change both the <em>runProgram</em> to return an id instead of a double, and also change the <em>popOperandOffProgramStack</em> method to return an id tooâ¦ This is because runProgram is calling into popOperandOffProgramStack. 

Does this resolve the error - if not, what is the error message you are getting?
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>158</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>161</wp:comment_id>
			<wp:comment_author><![CDATA[Beginner in iOs]]></wp:comment_author>
			<wp:comment_author_email>csharpdeveloper9@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>98.155.30.73</wp:comment_author_IP>
			<wp:comment_date>2012-05-21 19:07:40</wp:comment_date>
			<wp:comment_date_gmt>2012-05-21 19:07:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi David,

Thanks for a quick response.
After writing to you, I realized that I need to change the runProgram to return an id instead of a double. I think the logic I have in the runProgram is incorrect because it gives me an error said, 'NSArray replaceObjectAtIndex:withObject: cannot be nil'.

Here is a snippet of my code in the runProgram method. Hope you could identify the bug.

<code lang="objc">
+ (id)runProgram:(id)program usingVariableValues:(NSDictionary *)variableValues
{
    NSMutableArray *stack = [program mutableCopy];
    
    // loop through items in the program
    for (int i = 0; i &lt;[stack count]; i++) {
        id theObj = [stack objectAtIndex:i];
        
        // check and see if the item is a string
        if ([theObj isKindOfClass:[NSString class]] &amp;&amp; ![self isOperation:theObj]) {
            id theValue = [variableValues objectForKey:theObj];
         
            // check and see if the item is a number
            if ([theObj isKindOfClass:[NSNumber class]]) {
                theValue = [NSNumber numberWithInt:1];
            }
            
            // replace the program variable with the value
            [stack replaceObjectAtIndex:i withObject:theValue];
        }
    }
    
    // start popping the items off the stack
    return [self popOperandOffProgramStack:stack];
}
</code>
Thanks!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>162</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.i4-apps.com</wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-05-21 19:25:26</wp:comment_date>
			<wp:comment_date_gmt>2012-05-21 19:25:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your implementation is very close to mine here â¦. I'm not sure why your getting the error, but it is probably worth using the debugger or putting in a check to see whether or not either <em>stack</em> or <em>theValue</em> are nil when <em>replaceObjectAtIndex</em> runsâ¦.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>161</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>163</wp:comment_id>
			<wp:comment_author><![CDATA[Beginner in iOs]]></wp:comment_author>
			<wp:comment_author_email>csharpdeveloper9@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>98.155.30.73</wp:comment_author_IP>
			<wp:comment_date>2012-05-21 21:21:25</wp:comment_date>
			<wp:comment_date_gmt>2012-05-21 21:21:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very good suggestion. I will try that. 

Thanks!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>162</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>209</wp:comment_id>
			<wp:comment_author><![CDATA[Samuel]]></wp:comment_author>
			<wp:comment_author_email>sovaldes@uc.cl</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>146.155.14.23</wp:comment_author_IP>
			<wp:comment_date>2012-06-11 18:31:31</wp:comment_date>
			<wp:comment_date_gmt>2012-06-11 18:31:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi David, I am trying to fix my code making runProgram return an id, but then I am getting troubles with the function popOperandOffStack. Apparently I can do arithmetic operations with id objects. Do you know how to fix this?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>117</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>210</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.i4-apps.com</wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-06-11 18:40:16</wp:comment_date>
			<wp:comment_date_gmt>2012-06-11 18:40:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[hi Samuel .. you can convert the id to a double value using [operand1 doubleValue] where operand1 is the variable of type id. You can then convert the result of the operation back to NSNumber and return it â¦]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>209</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>213</wp:comment_id>
			<wp:comment_author><![CDATA[Samuel]]></wp:comment_author>
			<wp:comment_author_email>sovaldes@uc.cl</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>146.155.14.23</wp:comment_author_IP>
			<wp:comment_date>2012-06-11 22:53:54</wp:comment_date>
			<wp:comment_date_gmt>2012-06-11 22:53:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks David, but I still having troubles with runProgram. I did what you say for popOperandOffStack, but I still having the same error as Jonathan. 

I wrote the popOperandOffStack method like this:

+ (id)popOperandOffSatck:(NSMutableArray *)stack
{
    double result = 0;
    id topOfStack = [stack lastObject];
    if (topOfStack) [stack removeLastObject];
    
    if ([topOfStack isKindOfClass:[NSNumber class]]){
        result = [topOfStack doubleValue];
    }
    else if ([topOfStack isKindOfClass:[NSString class]])
    {
        NSString *operation = topOfStack;
        
        if ([operation isEqualToString:@"+"]){
            result = [[self popOperandOffSatck:stack] doubleValue]+[[self popOperandOffSatck:stack] doubleValue];
        } else if ([operation isEqualToString:@"-"]){
            result = -[[self popOperandOffSatck:stack] doubleValue]+[[self popOperandOffSatck:stack] doubleValue];
        } else if ([operation isEqualToString:@"x"]){
            result = [[self popOperandOffSatck:stack] doubleValue]*[[self popOperandOffSatck:stack] doubleValue];
        } else if ([operation isEqualToString:@"Ã·"]){
            result = 1/([[self popOperandOffSatck:stack] doubleValue]/[[self popOperandOffSatck:stack] doubleValue]);
        } else if ([operation isEqualToString:@"Â±"]){
            result = -[[self popOperandOffSatck:stack] doubleValue];
        } else if ([operation isEqualToString:@"1/x"]){
            result = 1/([[self popOperandOffSatck:stack] doubleValue]);
        } else if ([operation isEqualToString:@"sin"]){
            result = sin([[self popOperandOffSatck:stack] doubleValue]);
        } else if ([operation isEqualToString:@"cos"]){
            result = cos([[self popOperandOffSatck:stack] doubleValue]);
        } else if ([operation isEqualToString:@"?"]){
            result = M_PI;
        } else if ([operation isEqualToString:@"sqrt"]){
            result = sqrt([[self popOperandOffSatck:stack] doubleValue]);
        }
    }
    
    return [NSNumber numberWithDouble:result];    
}

However the compiler is still complaining me with a conflicting return between double and id, at runProgram]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>210</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>214</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.i4-apps.com</wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-06-12 09:23:51</wp:comment_date>
			<wp:comment_date_gmt>2012-06-12 09:23:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Is your runProgram method returning an id or a double? It needs to return an id]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>213</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>217</wp:comment_id>
			<wp:comment_author><![CDATA[Samuel]]></wp:comment_author>
			<wp:comment_author_email>sovaldes@uc.cl</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>146.155.14.23</wp:comment_author_IP>
			<wp:comment_date>2012-06-12 13:35:44</wp:comment_date>
			<wp:comment_date_gmt>2012-06-12 13:35:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[My mistake I forgot to change the declarations in the headers files. Thank you very much David. Really useful your tutorial]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>214</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Subscribe</title>
		<link>http://www.i4-apps.com/subscribe/</link>
		<pubDate>Thu, 29 Mar 2012 09:39:00 +0000</pubDate>
		<dc:creator>me</dc:creator>
		<guid isPermaLink="false">http://www.i4-apps.com/?page_id=466</guid>
		<description></description>
		<content:encoded><![CDATA[[subscribe2] ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>466</wp:post_id>
		<wp:post_date>2012-03-29 09:39:00</wp:post_date>
		<wp:post_date_gmt>2012-03-29 09:39:00</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>subscribe</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>s2mail</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Assignment 3: required tasks</title>
		<link>http://www.i4-apps.com/assignment-3-required-tasks/</link>
		<pubDate>Tue, 03 Apr 2012 15:42:02 +0000</pubDate>
		<dc:creator>me</dc:creator>
		<guid isPermaLink="false">http://www.i4-apps.com/?p=507</guid>
		<description></description>
		<content:encoded><![CDATA[This post is the source code for my solution to the required tasks of the third assignment of the <a href="http://www.stanford.edu/class/cs193p/cgi-bin/drupal/" title="CS193p home page at Stanford University" target="_blank">Stanford University CS193p lecture series</a>. It took quite a lot bit longer than I expected to complete these tasks, but it is very satisfying to now have a first working app. Please let me know any questions, suggestions or other discussion you may have.

So, if you're still with the action ...
<!--more-->

I made a couple of straightforward updates to the CalculatorViewController to perform the segue, and implemented some new classes to enable the new graphing functionality.
</br>
To implement the segue, in the CalculatorViewControllerâ¦..
</br>
<code lang="objc">
- (GraphViewController *)graphViewController {
	return [self.splitViewController.viewControllers lastObject];
}

- (IBAction)drawGraphPressed {
	
	if ([self graphViewController]) {
		[[self graphViewController] setProgram:self.brain.program];
	} else {
		[self performSegueWithIdentifier:@"ShowGraph" sender:self];
	}
}

- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
	[segue.destinationViewController setProgram:self.brain.program];
}
</code>
</br>
And the new GraphViewControllerâ¦..
</br>
<code lang="objc">
#import <UIKit/UIKit.h>

@interface GraphViewController : UIViewController <UISplitViewControllerDelegate>

@property (nonatomic, strong) id program;

@end
</code>
<code lang="objc">
#import "GraphViewController.h"
#import "CalculatorBrain.h"
#import "GraphView.h"

@interface GraphViewController () <GraphViewDataSource>

@property (nonatomic, weak) IBOutlet GraphView *graphView;
@property (weak, nonatomic) IBOutlet UIToolbar *toolbar;

@end

@implementation GraphViewController

@synthesize program = _program;
@synthesize graphView = _graphView;
@synthesize toolbar = _toolbar;


- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil {
	self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
	// Synchronize the view with the model
	if (self) { }	
	return self;
}

- (void)awakeFromNib {
	[super awakeFromNib];
	self.splitViewController.delegate = self;
	self.splitViewController.presentsWithGesture = NO;	
}

- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation {
	return YES;
}

- (BOOL)splitViewController:(UISplitViewController *)svc 
	shouldHideViewController:(UIViewController *)vc 
				  inOrientation:(UIInterfaceOrientation)orientation {	
	// Only show the master controller in landscape mode
	return UIInterfaceOrientationIsPortrait(orientation);
}

- (void)splitViewController:(UISplitViewController *)svc 
	  willHideViewController:(UIViewController *)aViewController 
			 withBarButtonItem:(UIBarButtonItem *)barButtonItem 
		 forPopoverController:(UIPopoverController *)pc {
	
	// Show the bar button item on the toolbar
	barButtonItem.title = aViewController.title;
	
	// Add the button to the toolbar
	NSMutableArray *toolbarItems = [self.toolbar.items mutableCopy];
	[toolbarItems insertObject:barButtonItem atIndex:0];
	self.toolbar.items = toolbarItems;	
}

- (void) splitViewController:(UISplitViewController *)svc 
		willShowViewController:(UIViewController *)aViewController 
	invalidatingBarButtonItem:(UIBarButtonItem *)barButtonItem {
	
	// Hide the bar button item on the detail controller
	NSMutableArray *toolbarItems = [self.toolbar.items mutableCopy];
	[toolbarItems removeObject:barButtonItem];
	self.toolbar.items = toolbarItems;
}

- (void)refreshGraphViewProperties {

	// Need a program to recall scale and axis origin
	if (! self.program) return;
	
	// Need a graph view to set initial scale and axis origin
	if (! self.graphView) return;
	
	NSString *program = [CalculatorBrain descriptionOfProgram:self.program];
	
	// Retrieve the scale from storage
	float scale = [[NSUserDefaults standardUserDefaults] 
						floatForKey:[@"scale." stringByAppendingString:program]];	
	
	// Retrieve the x axis origin from storage
	float xAxisOrigin = [[NSUserDefaults standardUserDefaults] 
								floatForKey:[@"x." stringByAppendingString:program]];
	
	// Retrieve the y axis origin from storage
	float yAxisOrigin = [[NSUserDefaults standardUserDefaults]
								floatForKey:[@"y." stringByAppendingString:program]];
	
	// If we have scale in storage, then set this as the scale for the graph view
	if (scale) self.graphView.scale = scale;
	
	// If we have a value for the xAxisOrigin and yAxisOrigin then set it in the graph view
	if (xAxisOrigin && yAxisOrigin) {
		
		CGPoint axisOrigin;
		
		axisOrigin.x = xAxisOrigin;
		axisOrigin.y = yAxisOrigin;
		
		self.graphView.axisOrigin = axisOrigin;
	}
	
	// Refresh the graph View
	[self.graphView setNeedsDisplay];

}

- (void) setProgram:(id)program {
	
	_program = program;

	// We want to set the title of the controller if the program changes
	self.title = [NSString stringWithFormat:@"y = %@", 
					  [CalculatorBrain descriptionOfProgram:self.program]];
		
	// We want to update the graphView to set the starting values for the program. 
	//In iPhone mode this method is called as part of prepareSegue, at which point the graphView
	//is not available, and so the call shouldn't do anything.
	[self refreshGraphViewProperties];
} 


- (void) setGraphView:(GraphView *)graphView {
	_graphView = graphView;
	self.graphView.dataSource = self;
	
	// enable pinch gesture in the GraphView using pinch: handler
	[self.graphView addGestureRecognizer:[[UIPinchGestureRecognizer alloc] 
													  initWithTarget:self.graphView 
													  action:@selector(pinch:)]];

	// enable pan gesture in the GraphView using pan: handler
	[self.graphView addGestureRecognizer:[[UIPanGestureRecognizer alloc]
													  initWithTarget:self.graphView
													  action:@selector(pan:)]];
	
	// enable triple tap gesture in the GraphView using tripleTap: handler	
	UITapGestureRecognizer *tapGestureRecognizer = 
		[[UITapGestureRecognizer alloc] initWithTarget:self.graphView 
															 action:@selector(tripleTap:)];	
	tapGestureRecognizer.numberOfTapsRequired = 3;
	[self.graphView addGestureRecognizer:tapGestureRecognizer];	
	
	// We want to update the graphView to set the starting values for the program. In iPad mode 
	// this method is called before a program is set, in which case we don't want to do anything
	[self refreshGraphViewProperties];
}

- (void)storeScale:(float)scale ForGraphView:(GraphView *)sender {
	
	// Store the scale in user defaults
	[[NSUserDefaults standardUserDefaults] 
	 setFloat:scale forKey:[@"scale." stringByAppendingString:
									[CalculatorBrain descriptionOfProgram:self.program]]];	
	
	// Save the scale
	[[NSUserDefaults standardUserDefaults] synchronize];
}

- (void)storeAxisOriginX:(float)x andAxisOriginY:(float)y ForGraphView:(GraphView *)sender {
	
	
	NSString *program = [CalculatorBrain descriptionOfProgram:self.program];
	
	// Store the x axis origin in user defaults
	[[NSUserDefaults standardUserDefaults] setFloat:x 
                                             forKey:[@"x." stringByAppendingString:program]];
	
	// Store the y axis origin in user defaults
	[[NSUserDefaults standardUserDefaults] setFloat:y 
                                             forKey:[@"y." stringByAppendingString:program]];
	
	// Save the axis origin
	[[NSUserDefaults standardUserDefaults] synchronize];

}
	 
- (float)YValueForXValue:(float)xValue inGraphView:(GraphView *)sender {
	
	// Find the corresponding Y value by passing the x value to the calculator Brain
	id yValue = [CalculatorBrain runProgram:self.program usingVariableValues:
					 [NSDictionary dictionaryWithObject:[NSNumber numberWithFloat:xValue] 
                                                                forKey:@"x"]];

	return ((NSNumber *)yValue).floatValue;	
}


- (void)viewDidUnload {
	[self setToolbar:nil];
	[super viewDidUnload];
}
@end
</code>
</br>
And for the new GraphView...
</br>
<code lang="objc">
#import <UIKit/UIKit.h>

@class GraphView;

@protocol GraphViewDataSource
- (float)YValueForXValue:(float)xValue inGraphView:(GraphView *)sender;
- (void)storeScale:(float)scale ForGraphView: (GraphView *)sender;
- (void)storeAxisOriginX:(float)x andAxisOriginY:(float)y ForGraphView: (GraphView *)sender;

@end

@interface GraphView : UIView

@property(nonatomic, weak) IBOutlet id <GraphViewDataSource> dataSource;
@property(nonatomic) CGFloat scale;
@property(nonatomic) CGPoint axisOrigin;

@end
</code>

<code lang="objc">
#import "GraphView.h"
#import "AxesDrawer.h"

@implementation GraphView

@synthesize dataSource = _datasource;
@synthesize scale = _scale;
@synthesize axisOrigin = _axisOrigin;

#define DEFAULT_SCALE 100

- (id)initWithFrame:(CGRect)frame {
	self = [super initWithFrame:frame];
	if (self) {	}
	return self;
}

- (CGFloat)scale {
	
	// Set the scale to the default scale if none already
	if (!_scale) _scale = DEFAULT_SCALE;	

	return _scale; 
}

- (void)setScale:(CGFloat)scale {
	
	// Do nothing if the scale hasn't changed
	if (_scale == scale) return;
	
	_scale = scale;
	
	// Ask the delegate to store the scale
	[self.dataSource storeScale:_scale ForGraphView:self];

	// Redraw whenever the scale is changed
	[self setNeedsDisplay];
}


- (void)setAxisOrigin:(CGPoint)axisOrigin {
	
	// Do nothing is the axis origin hasn't changed
	if (_axisOrigin.x == axisOrigin.x && _axisOrigin.y == axisOrigin.y) return;
	
	_axisOrigin = axisOrigin;
	
	// Ask the delegate to store the scale
	[self.dataSource storeAxisOriginX:_axisOrigin.x 
							 andAxisOriginY:_axisOrigin.y 
								ForGraphView:self];
	 
	 // Redraw whenever the axis origin is changed
	[self setNeedsDisplay];
}

- (CGPoint)axisOrigin {
	
	// Set it to the middle of the graphBounds, if if the current origin is (0,0)
	if (!_axisOrigin.x && !_axisOrigin.y) { 
		_axisOrigin.x = (self.graphBounds.origin.x + self.graphBounds.size.width) / 2;
		_axisOrigin.y = (self.graphBounds.origin.y + self.graphBounds.size.height) / 2;
	}
	return _axisOrigin;
}

- (CGRect)graphBounds {
	// Let's just make it the size of the view to keep things simple
	return self.bounds;
}

- (CGPoint)convertToGraphCoordinateFromViewCoordinate:(CGPoint)coordinate {
	
	CGPoint graphCoordinate;	
	
	graphCoordinate.x = (coordinate.x - self.axisOrigin.x) / self.scale;
	graphCoordinate.y = (self.axisOrigin.y - coordinate.y) / self.scale;
		
	return graphCoordinate;
}

- (CGPoint) convertToViewCoordinateFromGraphCoordinate:(CGPoint)coordinate {
	
	CGPoint viewCoordinate;
	
	viewCoordinate.x = (coordinate.x * self.scale) + self.axisOrigin.x;
	viewCoordinate.y = self.axisOrigin.y - (coordinate.y * self.scale);
	
	return viewCoordinate;
}


- (void)drawRect:(CGRect)rect {
	
	CGContextRef context = UIGraphicsGetCurrentContext();
	
	// Set the line width and colour of the axis.
	CGContextSetLineWidth(context, 2.0);	
	CGContextSetStrokeColorWithColor(context, [[UIColor redColor]CGColor]);

	// Draw the axes using the AxesDrawer helper class.
	[AxesDrawer drawAxesInRect:self.graphBounds originAtPoint:self.axisOrigin scale:self.scale];
	
	// Set the line width and colour of the graph lines
	CGContextSetLineWidth(context, 1.0);	
	CGContextSetStrokeColorWithColor(context, [[UIColor blueColor]CGColor]);	

	CGContextBeginPath(context);
	
	CGFloat startingX = self.graphBounds.origin.x;	
	CGFloat endingX = self.graphBounds.origin.x + self.graphBounds.size.width;	
	CGFloat increment = 1/self.contentScaleFactor; // To enable iteration over pixels
	
	BOOL firstPoint = YES;
	
	// Iterate over the horizontal pixels, plotting the corresponding y values
	for (CGFloat x = startingX; x<= endingX; x+=increment) {		
		// Identify the starting X point for the curve and convert to graph coordinates.
		// Then retrieve the corresponding Y value and convert it back to view coordindates
		CGPoint coordinate;
		coordinate.x = x;
		coordinate = [self convertToGraphCoordinateFromViewCoordinate:coordinate];
		coordinate.y = [self.dataSource YValueForXValue:coordinate.x inGraphView:self];
		coordinate = [self convertToViewCoordinateFromGraphCoordinate:coordinate];
		coordinate.x = x;	
		
		// Handle the edge cases
		if (coordinate.y == NAN || coordinate.y == INFINITY || coordinate.y == -INFINITY) 
			continue;	
		
		if (firstPoint) { 
			CGContextMoveToPoint(context, coordinate.x, coordinate.y);
			firstPoint = NO;
		}
		
		CGContextAddLineToPoint(context, coordinate.x, coordinate.y);		

	}	
	CGContextStrokePath(context);
}

- (void)pinch:(UIPinchGestureRecognizer *)gesture {
	if ((gesture.state == UIGestureRecognizerStateChanged) || 
		 (gesture.state == UIGestureRecognizerStateEnded)) {

		// Adjust the scale and reset the gesture scale to 1
		self.scale *= gesture.scale;
		gesture.scale = 1;	
	}
}

- (void)pan:(UIPanGestureRecognizer *)gesture {
	if ((gesture.state == UIGestureRecognizerStateChanged) || 
		 (gesture.state == UIGestureRecognizerStateEnded)) {
		

		// Move the origin of the graph  
		CGPoint translation = [gesture translationInView:self];
	
		CGPoint axisOrigin;
		axisOrigin.x = self.axisOrigin.x + translation.x;
		axisOrigin.y = self.axisOrigin.y + translation.y;

		self.axisOrigin = axisOrigin;
		[gesture setTranslation:CGPointZero inView:self];			
	}
}

- (void)tripleTap:(UITapGestureRecognizer *)gesture {
	if (gesture.state == UIGestureRecognizerStateEnded) {
		self.axisOrigin = [gesture locationOfTouch:0 inView:self];
	}
}


@end
</code>
</br></br>
And that's it.. time to take a look at the extra credit tasks..


]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>507</wp:post_id>
		<wp:post_date>2012-04-03 15:42:02</wp:post_date>
		<wp:post_date_gmt>2012-04-03 15:42:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>assignment-3-required-tasks</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="all-assignments"><![CDATA[All assignments]]></category>
		<category domain="post_tag" nicename="assignment-3"><![CDATA[assignment 3]]></category>
		<category domain="post_tag" nicename="cs193p"><![CDATA[CS193p]]></category>
		<category domain="post_tag" nicename="fall-2011"><![CDATA[fall 2011]]></category>
		<category domain="post_tag" nicename="graphing-calculator"><![CDATA[graphing calculator]]></category>
		<category domain="post_tag" nicename="stanford-university"><![CDATA[stanford university]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>s2mail</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>44</wp:comment_id>
			<wp:comment_author><![CDATA[mr curious]]></wp:comment_author>
			<wp:comment_author_email>woodydaniel@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>41.134.17.129</wp:comment_author_IP>
			<wp:comment_date>2012-04-10 14:23:05</wp:comment_date>
			<wp:comment_date_gmt>2012-04-10 14:23:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey,
I tried your modification if the seque code and ran it with the iPhone simulator. I noticed that I get a nested push animation (my prepareForSegue method gets called twice for some reason) use wanted to know of you came across this as well?

Thanks]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>45</wp:comment_id>
			<wp:comment_author><![CDATA[mr curious]]></wp:comment_author>
			<wp:comment_author_email>woodydaniel@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>41.134.17.129</wp:comment_author_IP>
			<wp:comment_date>2012-04-10 14:55:42</wp:comment_date>
			<wp:comment_date_gmt>2012-04-10 14:55:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Unless did you change anything in your storyboard re: the segue?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>44</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>46</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-04-14 15:51:45</wp:comment_date>
			<wp:comment_date_gmt>2012-04-14 15:51:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi - I am not seeing this problem... I put at NSLog in the <em>prepareForSegue</em> method and I am only seeing one call when it segues from the Calculator to the Graphâ¦.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>45</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>47</wp:comment_id>
			<wp:comment_author><![CDATA[mr curious]]></wp:comment_author>
			<wp:comment_author_email>woodydaniel@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>41.134.17.129</wp:comment_author_IP>
			<wp:comment_date>2012-04-16 09:49:49</wp:comment_date>
			<wp:comment_date_gmt>2012-04-16 09:49:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I found the problem. I was pushing the segue from the drawGraph button as opposed to the viewController.

Thanks for your help
Have a great day]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>46</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>48</wp:comment_id>
			<wp:comment_author><![CDATA[mani]]></wp:comment_author>
			<wp:comment_author_email>greatmani99@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>122.164.26.57</wp:comment_author_IP>
			<wp:comment_date>2012-04-25 12:03:15</wp:comment_date>
			<wp:comment_date_gmt>2012-04-25 12:03:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,
Your solution is awesome, it really helped me when i got stuck in exercise. Now i got some understanding the happiness project which paul teachs

in faceview.m, there is a line
    CGFloat size = self.bounds.size.width/2;
    if (self.bounds.size.height &lt; self.bounds.size.width) {
        size = self.bounds.size.height/2;        
    } 
My question is when the height would be less than the width? and if this if-condition is not there what would happen?

Again, thanks
main]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>49</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-04-25 15:05:30</wp:comment_date>
			<wp:comment_date_gmt>2012-04-25 15:05:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Mani, The height will be less than the width whenever the device is in landscape modeâ¦. I guess it's about calibrating the face size, so that it works well in both orientations]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>48</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>50</wp:comment_id>
			<wp:comment_author><![CDATA[newbee]]></wp:comment_author>
			<wp:comment_author_email>mail_nuri@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>86.174.118.11</wp:comment_author_IP>
			<wp:comment_date>2012-04-26 18:25:35</wp:comment_date>
			<wp:comment_date_gmt>2012-04-26 18:25:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I am trying to understand what origin and scale values will the view have. When you are trying to storeScale and storeAxisOriginX and AxisOriginY in GraphViewController, what kind of values would the CalculatorBrain return? Can you give me an example.

I am having difficulty with the math part about the Graph coordinate values and View coordinate values. If there is a screenshot of the graph drawn, that would be helpful.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>51</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-04-27 09:04:52</wp:comment_date>
			<wp:comment_date_gmt>2012-04-27 09:04:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi there,

The origin will have values, representing the coordinates of the graph axis within the view â¦ so anywhere from (0,0) to (x,y); where x is the width of the view and y is the height. The scale starts at 1 and then either increases or decreases depending on whether or not your are zooming in or out â¦ it get's reset back to 1 when the zoom gesture has completed.

CalculatorBrain is being used here only to describe the program. I use the resulting NSString as the key against which to store the origin and scale against. The effect I was going for was to allow different graphs to 'remember' their own specific origin and scales. It's my chosen implementation of req #10 based on the guidance of hint #24.

I've added a screenshot of the graph view <a href="http://www.i4-apps.com/wp-content/uploads/2012/04/assignment3-graphview-screenshot.tiff" title="Screenshot of graph view" rel="nofollow">here</a>.

Hope this helps :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>50</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>52</wp:comment_id>
			<wp:comment_author><![CDATA[Carter Burn]]></wp:comment_author>
			<wp:comment_author_email>carter.burn3@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>75.72.238.167</wp:comment_author_IP>
			<wp:comment_date>2012-04-28 03:11:33</wp:comment_date>
			<wp:comment_date_gmt>2012-04-28 03:11:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey! Will you be posting assignments 4 - 7 anytime soon? Thanks!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>53</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-04-28 06:08:57</wp:comment_date>
			<wp:comment_date_gmt>2012-04-28 06:08:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi â¦ yes I'm planning on posting the required tasks for assignment 4 in the next couple of days. It's been a busy month :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>52</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68</wp:comment_id>
			<wp:comment_author><![CDATA[Dr David]]></wp:comment_author>
			<wp:comment_author_email>david-pizzi@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>86.29.164.47</wp:comment_author_IP>
			<wp:comment_date>2012-04-28 16:33:00</wp:comment_date>
			<wp:comment_date_gmt>2012-04-28 16:33:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey,

Thanks for posting your solutions, at least I can now compare what i've been doing with something... :)

Just one small question though, any particular reason you implemented in GraphViewController the instance method - (id) initWithNibName:(NSString *) nibNameOrNil bundle:(NSBundle *) nibBundleOrNil  ? 

Thanks,
D.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>69</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-04-28 16:41:20</wp:comment_date>
			<wp:comment_date_gmt>2012-04-28 16:41:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,

That method is added by default when the class is created. I think I must have just forgotten to delete itâ¦. :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>68</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>75</wp:comment_id>
			<wp:comment_author><![CDATA[Dr David]]></wp:comment_author>
			<wp:comment_author_email>david-pizzi@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>188.79.98.10</wp:comment_author_IP>
			<wp:comment_date>2012-04-29 20:49:26</wp:comment_date>
			<wp:comment_date_gmt>2012-04-29 20:49:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[haha ok i see ! ;)

Seems that the method initWithNibName:bundle: is used to directly create controllers using code (and associate them with their corresponding NIB view file) when not using storyboard (i.e. mostly before the version iOS 5 I guess) which seems (in addition to reference counting) to have been be quite a pain !
Therefore, this still might be worth doing it if you want your controllers to be shared and/or developed under previous iOS versions. The lectures only targeting iOS 5, this belongs only to general understanding/knowledge of iPhone development I guess. 

Thanks anyway,
D.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>69</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>76</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.i4-apps.com</wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-04-29 21:27:04</wp:comment_date>
			<wp:comment_date_gmt>2012-04-29 21:27:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[no storyboard does sound like a pain. Thanks for the info :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>75</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>126</wp:comment_id>
			<wp:comment_author><![CDATA[ali]]></wp:comment_author>
			<wp:comment_author_email>sagittarious1612@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.uettaxila.edu.pk</wp:comment_author_url>
			<wp:comment_author_IP>121.52.150.172</wp:comment_author_IP>
			<wp:comment_date>2012-05-09 18:40:27</wp:comment_date>
			<wp:comment_date_gmt>2012-05-09 18:40:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[i m new to iphone development...
i have to do this assignment by using SplitViewController for Ipad but i dnt know the steps how should i add SplitViewController in the project?moreOver i have to add Pinch Gesture too.
Looking for your Reply 
Thanks in Advance]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>127</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.i4-apps.com</wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-05-09 18:52:09</wp:comment_date>
			<wp:comment_date_gmt>2012-05-09 18:52:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[hi Ali - the lectures show how to add a SplitViewController and to create the iPad Storyboard - it's lecture 7 that goes through it in detail... I think the pinch gesture is the same as on the iPhone - so no changes thereâ¦.

My source code is available at https://github.com/i4-apps/Calculator - this shows my Calculator storyboard.

If you have a more specific question, then please let me know and I will try to answerâ¦]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>126</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>201</wp:comment_id>
			<wp:comment_author><![CDATA[break003]]></wp:comment_author>
			<wp:comment_author_email>break_003@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>111.81.75.173</wp:comment_author_IP>
			<wp:comment_date>2012-06-08 09:20:40</wp:comment_date>
			<wp:comment_date_gmt>2012-06-08 09:20:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you for posting all those assignment solutions. I am just wondering if you know how to simulate triple-tap gesture on iOS iPhone simulator? Or, it can only be tested on a real iPhone?

Thank you !!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>202</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.i4-apps.com</wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-06-08 11:02:23</wp:comment_date>
			<wp:comment_date_gmt>2012-06-08 11:02:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You can just click three times with your mouseâ¦ that works for me.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>201</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>226</wp:comment_id>
			<wp:comment_author><![CDATA[rslume]]></wp:comment_author>
			<wp:comment_author_email>bjqdnm@qacaaw.com</wp:comment_author_email>
			<wp:comment_author_url>http://zphwfvvlukje.com/</wp:comment_author_url>
			<wp:comment_author_IP>91.201.64.25</wp:comment_author_IP>
			<wp:comment_date>2012-06-15 03:40:32</wp:comment_date>
			<wp:comment_date_gmt>2012-06-15 03:40:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[9UBiF7  <a href="http://kfqmnqurhrmo.com/" rel="nofollow">kfqmnqurhrmo</a>, [url=http://defcjfiqjqck.com/]defcjfiqjqck[/url], [link=http://ceraxehcfdic.com/]ceraxehcfdic[/link], http://axwhbvifsfxi.com/]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1339746470]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Assignment 3: extra credit</title>
		<link>http://www.i4-apps.com/assignment-3-extra-credit/</link>
		<pubDate>Wed, 04 Apr 2012 19:02:15 +0000</pubDate>
		<dc:creator>me</dc:creator>
		<guid isPermaLink="false">http://www.i4-apps.com/?p=546</guid>
		<description></description>
		<content:encoded><![CDATA[This covers the extra credit tasks of Assignment 3. I think this is pretty much it for the Calculator app, although I might look to jazz it up a little and put it on the app store at some point. Who knows? :-)

Let's get it finishedâ¦
<!--more-->
Hmm.. so how do we draw in dot mode? I tried a few different ways but in the end settled on using:

<code lang="objc">
// Draw in either dot mode or line
if (self.drawInDotMode) {
    CGContextMoveToPoint(context, coordinate.x, coordinate.y);
    // Use an Arc, with a small radius
    CGContextAddArc(context, coordinate.x, coordinate.y, 0.25, 0, 2*M_PI, YES);
} else {
    CGContextAddLineToPoint(context, coordinate.x, coordinate.y);
}
</code>

<em>self.drawInDotMode</em> is a new BOOL property that I use to determined the mode. Not sure about the radius of 0.25 - I did try using 1/self.contentScaleFactor, but the graph lines seemed to look a bit thick. Would be great to hear of any preferred alternatives.

Now all we need to do is to add a new switch to the <em>GraphView</em> and link this to a new action in the <em>GraphViewController</em>. For me, the implementation of the new action looks like thisâ¦

<code lang="objc">
- (IBAction)drawModeSwitched:(id)sender {
	self.graphView.drawInDotMode = [(UISwitch *)sender isOn];
	[self.graphView setNeedsDisplay];	
}
</code>

Not too tricky :-)

Tasks 3 requires playing around with the Time Profiler. There is a later tutorial on this, but I found it easy enough to just play around with it. I found an area in the CalculatorBrain eating up the CPU, in fact taking more time than actually doing the drawing. The original code looked like this:

<code lang="objc">
+ (BOOL)isNoOperandOperation:(NSString *)operation {
	// The set of operations requiring no operands
	NSSet * operationSet = [NSSet setWithObjects:@"?",nil];
	return [operationSet containsObject:operation];
}

+ (BOOL)isOneOperandOperation:(NSString *)operation {
	// The set of operations requiring one operands
	NSSet * operationSet = [NSSet setWithObjects:@"sin",@"cos",@"sqrt",@"Â±",nil];
	return [operationSet containsObject:operation];
}

+ (BOOL)isTwoOperandOperation:(NSString *)operation {
	// The set of operations requiring two operands
	NSSet * operationSet = [NSSet setWithObjects:@"+",@"-",@"*",@"/",nil];
	return [operationSet containsObject:operation];
}

+ (BOOL)isOperation:(NSString *)operation {	
	
	// Check to see if it's in any of our operation sets
	return 
	[self isNoOperandOperation:operation] ||
	[self isOneOperandOperation:operation]||
	[self isTwoOperandOperation:operation];
}
</code>

These methods are being called each time a program is run. The repeated set manipulation is unnecessary, as the queries don't change on an instance by instance basis. So with a new static NSDictionary to store operandCounts and a bit of refactoring...

<code lang="objc">
+ (NSDictionary *)operandCounts {
	if (OPERAND_COUNTS == nil) {
		OPERAND_COUNTS = [NSDictionary dictionaryWithObjectsAndKeys: 
								[NSNumber numberWithInt:0], @"?", 
								[NSNumber numberWithInt:1], @"sin",
								[NSNumber numberWithInt:1], @"cos", 
								[NSNumber numberWithInt:1], @"sqrt",
								[NSNumber numberWithInt:1], @"Â±", 
								[NSNumber numberWithInt:2], @"+", 
								[NSNumber numberWithInt:2], @"-", 
								[NSNumber numberWithInt:2], @"*", 
								[NSNumber numberWithInt:2], @"/", nil];
	}
	return OPERAND_COUNTS;
}

+ (BOOL)isNoOperandOperation:(NSString *)operation {
	
	return [[self operandCounts] objectForKey:operation] == [NSNumber numberWithInt:0];
}

+ (BOOL)isOneOperandOperation:(NSString *)operation {
	
	return [[self operandCounts] objectForKey:operation] == [NSNumber numberWithInt:1];
}

+ (BOOL)isTwoOperandOperation:(NSString *)operation {
	
	return [[self operandCounts] objectForKey:operation] == [NSNumber numberWithInt:2];
}

+ (BOOL)isOperation:(NSString *)operation {	
	
	// Check to see if it's in the operandCounts dictionary
	return [[self operandCounts] objectForKey:operation] != nil;
}
</code>

Much betterâ¦ and the performance improved nicely :-)
</br></br>
So, that's about it for assignment 3 and the calculator tasks. Hope these posts have been of some use and I'm happy to discuss any aspect of these solutions in more detail, so feel free to leave a comment or drop me an email.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>546</wp:post_id>
		<wp:post_date>2012-04-04 19:02:15</wp:post_date>
		<wp:post_date_gmt>2012-04-04 19:02:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>assignment-3-extra-credit</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="all-assignments"><![CDATA[All assignments]]></category>
		<category domain="post_tag" nicename="assignment-3"><![CDATA[assignment 3]]></category>
		<category domain="post_tag" nicename="calculator"><![CDATA[calculator]]></category>
		<category domain="post_tag" nicename="cs193p"><![CDATA[CS193p]]></category>
		<category domain="post_tag" nicename="fall-2011"><![CDATA[fall 2011]]></category>
		<category domain="post_tag" nicename="stanford-university"><![CDATA[stanford university]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>s2mail</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>55</wp:comment_id>
			<wp:comment_author><![CDATA[Dave K]]></wp:comment_author>
			<wp:comment_author_email>dave.kliman@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>24.47.137.6</wp:comment_author_IP>
			<wp:comment_date>2012-04-06 12:37:53</wp:comment_date>
			<wp:comment_date_gmt>2012-04-06 12:37:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I had originally done something like your operand counts dictionary, so what was slow for me was the drawing, actually... and i haven't really addressed that part of the assignment yet... incidentally i'm wondering if drawing arcs for each pixel isn't quite time consuming compared to some other operation that might be easier... unless arcs are drawn with bill atkinson's variation on that bresenham algorthm, where it's all done using only i think addition...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>56</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-04-06 13:11:40</wp:comment_date>
			<wp:comment_date_gmt>2012-04-06 13:11:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yes, it does look like drawing arcs is relatively time consuming. I've replaced the Arc drawing with this:
<code lang="objc">
CGContextAddLineToPoint(context, 
						coordinate.x - 1/self.contentScaleFactor, 
						coordinate.y - 1/self.contentScaleFactor);
</code>
â¦ and performance is now comparable in both modes.

Thanks for highlighting that.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>55</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Gotcha! NAN and INFINITY</title>
		<link>http://www.i4-apps.com/nan-and-infinity/</link>
		<pubDate>Thu, 05 Apr 2012 17:20:10 +0000</pubDate>
		<dc:creator>me</dc:creator>
		<guid isPermaLink="false">http://www.i4-apps.com/?p=564</guid>
		<description></description>
		<content:encoded><![CDATA[As an iOS noob, schoolboy errors are pretty much par for the course. Here's a little gotcha! (it got me certainly :-)), that I could see appearing as part of a 'little bit too tricky technical interview'â¦.
<!--more-->
<code lang="objc">
	if (NAN==NAN) NSLog(@"NAN does equal NAN");
	else NSLog(@"NAN does not equal NAN");
		
	if (INFINITY==INFINITY) NSLog(@"INFINITY does equal INFINITY");
	else NSLog(@"INFINITY does not equal INFINITY");
	
	if (-INFINITY==INFINITY) NSLog(@"-INFINITY does equal +INFINITY");
	else NSLog(@"-INFINITY does not equal +INFINITY");
	

	if isnan(NAN) NSLog(@"isnan NAN? Yes it is!");
	else NSLog(@"isnan NAN? No it isn't!");
	
	if isinf(INFINITY) NSLog(@"isinf INFINITY? Yes it is!");
	else NSLog(@"isinf INFINITY? No it isn't!");	
	
	if isinf(-INFINITY) NSLog(@"isinf -INFINITY? Yes it is!");
	else NSLog(@"isinf -INFINITY? No it isn't!");		
</code>
And the resultsâ¦ 

NAN does not equal NAN
INFINITY does equal INFINITY
-INFINITY does not equal +INFINITY
isnan NAN? Yes it is!
isinf INFINITY? Yes it is!
isinf -INFINITY? Yes it is!

So there we goâ¦ the explanation isn't entirely clear to me, but it does seems that the general rule is to always use isnan or isinf when testing for NAN or INFINITY!

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>564</wp:post_id>
		<wp:post_date>2012-04-05 17:20:10</wp:post_date>
		<wp:post_date_gmt>2012-04-05 17:20:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nan-and-infinity</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general-ios"><![CDATA[General iOS]]></category>
		<category domain="post_tag" nicename="infinity"><![CDATA[INFINITY]]></category>
		<category domain="post_tag" nicename="ios"><![CDATA[iOS]]></category>
		<category domain="post_tag" nicename="isinf"><![CDATA[isinf]]></category>
		<category domain="post_tag" nicename="isnan"><![CDATA[isnan]]></category>
		<category domain="post_tag" nicename="nan"><![CDATA[NAN]]></category>
		<category domain="post_tag" nicename="objective-c"><![CDATA[objective c]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>s2mail</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SplitViewController Popovers</title>
		<link>http://www.i4-apps.com/splitviewcontroller-popovers/</link>
		<pubDate>Fri, 06 Apr 2012 17:00:57 +0000</pubDate>
		<dc:creator>me</dc:creator>
		<guid isPermaLink="false">http://www.i4-apps.com/?p=583</guid>
		<description></description>
		<content:encoded><![CDATA[I've been working my way through the excellent Stanford University <a title="iPad and iPhone Application Development (HD) by Paul Hegarty (Fall 2011)" href="http://itunes.apple.com/itunes-u/ipad-iphone-application-development/id473757255" target="_blank">CS193p lectures</a> taught by Paul Hegarty and available through iTunes U. Lecture 7 describes and demos how to use a UISplitViewController, and a technique in which a bar button shows the 'Master View' in a pretty popover window whenever the iPad is in portrait mode. 

For me though, it doesn't work like that. The bar button slides a non-popover version of the Master View into the left side of the screen and no pretty popover appears. Frankly, it's ugly ... but I think there is a workaround to get things looking how they should :-)
<!--more-->
A bit of searching around the internet and, unsurprisingly, I'm not the first person to run into this. This <a href="http://www.picapod.com/2012/03/28/ipad-popovers/" title="iPad popovers" target="_blank">post</a> describes and shows the issue quite nicely. The problem seems to be a new feature of iOS 5.1!

So â¦ how do we get things looking like they were before? This may be one solution:


1. ctrl-drag from your DetailViewController to your MasterViewController. Select Popover as the Storyboard segue. Set an appropriate identifier for the segue in the Attributes Inspector.

2. The bar button item is placed programmatically and so doesn't appear in the storyboard. This means you can't drag the Anchor attribute to the item to which you want to anchor the Popover. This anchoring should (and probably can) be done programmatically but an alternative, albeit cheap and dirty!, is to create a 'no-text' label at the place where the bar button appears, and anchor from this instead. If anyone knows a better way, please let me know :-).

3. Add the highlighted lines to the following SplitViewController delegate method:
<code lang="objc" highlight="9,10">
- (void)splitViewController:(UISplitViewController *)svc 
	  willHideViewController:(UIViewController *)aViewController 
			 withBarButtonItem:(UIBarButtonItem *)barButtonItem 
		 forPopoverController:(UIPopoverController *)pc {
	
	// Show the bar button item on the toolbar
	barButtonItem.title = aViewController.title;
	
	barButtonItem.target = self;
	barButtonItem.action = @selector(barButtonPressed);
	
	// Add the button to the toolbar
	NSMutableArray *toolbarItems = [self.toolbar.items mutableCopy];
	[toolbarItems insertObject:barButtonItem atIndex:0];
	self.toolbar.items = toolbarItems;	
}
</code>
This seems to override what happens when the user presses the bar button item, instead calling the <em>barButtonPressed</em> defined in the current class. The implementation of <em>barButtonPressed</em> just performs the segue created in step 1.
<code lang="objc">
- (void)barButtonPressed {
		[self performSegueWithIdentifier:@"ShowCalculator" sender:self];	
}
</code>

So far so goodâ¦ the Popover displays nicely. However, given that the Popover presents an instance of the MasterViewController, for a lot of apps the likelihood is that things you do in the Popover will change stuff in the Detail View. As a Popover, the instance of the Controller is not part of the SplitViewController, so getting a handle to the DetailViewController using <em>[self.splitViewController.viewControllers lastObject]</em> isn't going to cut it. We need to make sure things are still wired up for the case where our Master View is also presented in Popover mode.

4. Create a new protocol describing a delegate for the MasterViewController class. Also define a new public property in the MasterViewController that enables it to access the delegate. My MasterViewController header now looks like this.

<code lang="objc" highlight="4,5,6,14">
#import <UIKit/UIKit.h>
#import "CalculatorBrain.h"

@protocol MasterViewControllerPopoverDelegate 
@property (weak, nonatomic) id masterViewController;
@end

@interface CalculatorViewController : UIViewController

@property (weak, nonatomic) IBOutlet UILabel *display;
@property (weak, nonatomic) IBOutlet UILabel *calculation;
@property (weak, nonatomic) IBOutlet UILabel *variables;

@property (weak, nonatomic) id<MasterViewControllerPopoverDelegate> popoverDelegate;

@end
</code>

So, whenever the Popover wants to message the DetailViewController it can do so through the <em>popoverDelegate</em>. We need to change our code where appropriate so that calls that currently access the MasterViewController via SplitViewController are 'Popover aware'. This is what I did in my MasterViewController class (<em>GraphViewController</em> is my DetailViewController class).

<code lang="objc">
- (GraphViewController *)graphViewController {
	return self.popoverDelegate ? 
		self.popoverDelegate :[self.splitViewController.viewControllers lastObject];
}
</code>

Setting the delegate is done in the DetailViewController class, during <em>prepareForSegue</em>, so it is only in Popover mode where an instance of the MasterViewController class has a delegate that is not nil.

<code lang="objc" highlight="2">
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
	[segue.destinationViewController setPopoverDelegate:self];	
	self.popover = ((UIStoryboardPopoverSegue *)segue).popoverController;
}
</code>

5. The <em>masterViewController</em> property in the protocol above is used to enable the Popover to access data in the MasterViewController. It is to ensure that the data stored in the Popover instance is the same as the data stored in the MasterViewController instance. To implement this we need to ensure that the MasterViewController is the master of the model, and makes sure that the Popover uses this model rather than creating it's own. I've only got one model variable in my MasterViewController class and so for me it looks like this - with the highlighted rows being the new addition.

<code lang="objc" highlight="2">
- (CalculatorBrain *)brain {
	if (self.popoverDelegate) _brain = [[self.popoverDelegate masterViewController] brain];
	if (!_brain) _brain = [[CalculatorBrain alloc] init];
	return _brain;
}
</code>

The DetailViewController implements the protocol. We only need to synthesise the <em>masterViewController</em> and then override the get method to ensure that the Popover can source it's data from the MasterViewController instance.
<code lang="objc">
- (id)masterViewController {
	return [self.splitViewController.viewControllers objectAtIndex:0];	
}
</code>

â¦ oh and we also need to update the popover/MasterViewController view to ensure that it is always synced with the model. It seems to me that the best place to do this is <em>viewDidAppear</em>.

6. Finally we should to ensure that the Popover dismisses when the orientation changes from portrait to landscape. To do this, create a pointer to the popover controller that the segue creates.
<code lang="objc" highlight="3">
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
	[segue.destinationViewController setPopoverDelegate:self];	
	self.popover = ((UIStoryboardPopoverSegue *)segue).popoverController;
}
</code>
And then when the orientation changes to landscape and the MasterViewController gets shown, we can dismiss the Popover.
<code lang="objc" highlight="10">
- (void) splitViewController:(UISplitViewController *)svc 
		willShowViewController:(UIViewController *)aViewController 
	invalidatingBarButtonItem:(UIBarButtonItem *)barButtonItem {
	
	// Hide the bar button item on the detail controller
	NSMutableArray *toolbarItems = [self.toolbar.items mutableCopy];
	[toolbarItems removeObject:barButtonItem];
	self.toolbar.items = toolbarItems;
	
	if (self.popover) [self.popover dismissPopoverAnimated:YES];
}
</code>
Oh, it seems as if clicking the bar button when the popover is displayed will dismiss it. I don't think it did this before, so a bonus maybe. :-)

And that's it I think. Quite a bit of fuss really, but it seems to work .... 

P.S. As an aside, I did try for ages to create and manage a Popover programmatically, instead of segueing. Creating a Popover using the MasterViewController as the ContentViewController and then displaying it using <em>presentPopoverFromBarButtonItem: permittedArrowDirections: animated:</em> worked as expected, but I just couldn't seem to get <em>dismissPopoverAnimated</em> to cleanly drop the Popover whenever the orientation changed to landscape. It seems like a bug to me. If it had worked, it would be a far far simpler method with just a few lines of code!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>583</wp:post_id>
		<wp:post_date>2012-04-06 17:00:57</wp:post_date>
		<wp:post_date_gmt>2012-04-06 17:00:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>splitviewcontroller-popovers</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bar-button-item"><![CDATA[bar button item]]></category>
		<category domain="category" nicename="general-ios"><![CDATA[General iOS]]></category>
		<category domain="post_tag" nicename="ios-5-1"><![CDATA[iOS 5.1]]></category>
		<category domain="post_tag" nicename="popovers"><![CDATA[popovers]]></category>
		<category domain="post_tag" nicename="uisplitviewcontroller"><![CDATA[UISplitViewController]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>s2mail</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[uisplitviewcontroller-popovers-ios-51]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[uisplitviewcontroller-popovers]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>58</wp:comment_id>
			<wp:comment_author><![CDATA[Al]]></wp:comment_author>
			<wp:comment_author_email>apps@jawz.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://jawzapps.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>2.24.71.73</wp:comment_author_IP>
			<wp:comment_date>2012-04-17 22:16:08</wp:comment_date>
			<wp:comment_date_gmt>2012-04-17 22:16:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hmmm, seems like a bug doesn't it... the storyboard editor has a tick box to define an explicit size for the popover but it doesn't have any effect. Neither does changing the self.contentSizeForViewInPopover line in the MasterViewController'sawakeFromNib method. You'd think that changing either of these would make the popover revert to the old form in a bubble style, but it doesn't.

Seems silly of Apple to have left both these customisation points in - one in Xcode and one in the generated source - if neither have any effect. Probably worth filing a bug report.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>59</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-04-17 22:35:03</wp:comment_date>
			<wp:comment_date_gmt>2012-04-17 22:35:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Certainly doesâ¦. I've seen a few posts complaining about it and there seems to be a bit of activity on the Apple forums. Using <em>presentPopoverFromBarButtonItem</em> can be used to override the new behaviour but I couldn't get it to dismiss properlyâ¦. 

I think the size setting customisations would still be relevant for manually created popovers, as opposed to the popover that comes as part of the SplitViewController implementation...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>58</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>101</wp:comment_id>
			<wp:comment_author><![CDATA[John Dalton]]></wp:comment_author>
			<wp:comment_author_email>john.dalton@Neuf.fr</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>86.30.189.189</wp:comment_author_IP>
			<wp:comment_date>2012-05-03 16:59:53</wp:comment_date>
			<wp:comment_date_gmt>2012-05-03 16:59:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your idea of replacing barButtonItem target and action is a good one.  However, I think you can make life a lot easier if you add a property to your detail view controller which is a UIPopOverController and instantiate it (in viewDidLoad, for example ) with a pointer to your Master ViewController: e.g.
   self.masterPopoverController = [[UIPopoverController alloc] initWithContentViewController:[self.splitViewController.viewControllers objectAtIndex:0]];

This way, you don't create a new instance of the Master View Controller so all the links remain the same:

Then, in your barButtonPressed method, you just call:
[ detailViewController.masterPopoverController presentPopoverFromBarButtonItem ...] and everything should work.  No need to worry about delegates or protocols]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>102</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.i4-apps.com</wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-05-04 14:01:35</wp:comment_date>
			<wp:comment_date_gmt>2012-05-04 14:01:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I tried to do something similar using the UIPopoverController that is part of the <em>splitViewController:willHideViewController:withBarButtonItem:forPopoverController </em>. The problem I kept getting is that if I make the popover appear in landscape then turn the device, the popover doesn't seem to disappear cleanly. I tried your way of instantiating the popover, but seem to get the same problem â¦ seems like a bug to meâ¦ as the two line method is much much cleaner :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>101</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>152</wp:comment_id>
			<wp:comment_author><![CDATA[Phillip Kelly-Ayo]]></wp:comment_author>
			<wp:comment_author_email>kellyayo@hotmail.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://www.trans-ocracy.com</wp:comment_author_url>
			<wp:comment_author_IP>94.175.117.221</wp:comment_author_IP>
			<wp:comment_date>2012-05-18 07:49:45</wp:comment_date>
			<wp:comment_date_gmt>2012-05-18 07:49:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi David,

I am not sure that this work-around is required.  For me, the pop up functionality works correctly.  Instead of placing the code below in the GraphViewController, I placed it in the CalculatorViewController i.e. the controller that will be invoked when the pop up button is pressed ; which is similar to Paul's Lecture 7 demo, in that code below is placed in his RotatableViewController NOT the HappinessViewController.

This is a great blog.  Keep up the good work, from one Bathonian to another.

- (void)awakeFromNib {
   [super awakeFromNib];
   self.splitViewController.delegate = self;
   self.splitViewController.presentsWithGesture = NO; 
}

- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation {
   return YES;
}

- (BOOL)splitViewController:(UISplitViewController *)svc 
   shouldHideViewController:(UIViewController *)vc 
              inOrientation:(UIInterfaceOrientation)orientation { 
   // Only show the master controller in landscape mode
   return UIInterfaceOrientationIsPortrait(orientation);
}

- (void)splitViewController:(UISplitViewController *)svc 
     willHideViewController:(UIViewController *)aViewController 
          withBarButtonItem:(UIBarButtonItem *)barButtonItem 
       forPopoverController:(UIPopoverController *)pc {
   
   // Show the bar button item on the toolbar
   barButtonItem.title = aViewController.title;
   
   // Add the button to the toolbar
   NSMutableArray *toolbarItems = [self.toolbar.items mutableCopy];
   [toolbarItems insertObject:barButtonItem atIndex:0];
   self.toolbar.items = toolbarItems;  
}

- (void) splitViewController:(UISplitViewController *)svc 
      willShowViewController:(UIViewController *)aViewController 
   invalidatingBarButtonItem:(UIBarButtonItem *)barButtonItem {
   
   // Hide the bar button item on the detail controller
   NSMutableArray *toolbarItems = [self.toolbar.items mutableCopy];
   [toolbarItems removeObject:barButtonItem];
   self.toolbar.items = toolbarItems;
}]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>156</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.i4-apps.com</wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-05-19 10:36:49</wp:comment_date>
			<wp:comment_date_gmt>2012-05-19 10:36:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Phillip - a fellow Bathonian .. heh - what are the odds :-)

Which version of iOS are you using? It looks like the lectures are using iOS 5.0 - I think the problem was introduced in 5.1...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>152</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>159</wp:comment_id>
			<wp:comment_author><![CDATA[Phillip Kelly-Ayo]]></wp:comment_author>
			<wp:comment_author_email>kellyayo@hotmail.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://www.trans-ocracy.com</wp:comment_author_url>
			<wp:comment_author_IP>94.175.117.221</wp:comment_author_IP>
			<wp:comment_date>2012-05-21 07:42:48</wp:comment_date>
			<wp:comment_date_gmt>2012-05-21 07:42:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey,

Thanks for the heads up.  Yes, I have been coding for iOS 5.0...  D'oh!

Cheers

Phil]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>156</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>165</wp:comment_id>
			<wp:comment_author><![CDATA[Aliciane]]></wp:comment_author>
			<wp:comment_author_email>carolmedeirosreis@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.divulgaemail.com</wp:comment_author_url>
			<wp:comment_author_IP>189.91.91.147</wp:comment_author_IP>
			<wp:comment_date>2012-05-22 16:26:51</wp:comment_date>
			<wp:comment_date_gmt>2012-05-22 16:26:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[that's true.http://www.divulgaemail.com]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1337704238]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Assignment 4: required tasks</title>
		<link>http://www.i4-apps.com/assignment-4-required-tasks/</link>
		<pubDate>Mon, 30 Apr 2012 09:06:32 +0000</pubDate>
		<dc:creator>me</dc:creator>
		<guid isPermaLink="false">http://www.i4-apps.com/?p=676</guid>
		<description></description>
		<content:encoded><![CDATA[This post shows my solution for the fourth assignment of the <a href="http://www.stanford.edu/class/cs193p/cgi-bin/drupal/" title="CS193p home page at Stanford University" target="_blank">Stanford University CS193p lecture series</a>, available through iTunes U. This is the second app of the course. I've named mine Top Places - not entirely original I'm afraid!

So, onwards and upwards ...
<!--more-->
<strong>1. Use the provided FlickrFetcher class method topPlaces to get an array of the most popular Flickr photo spots in the last day or so. It is an array of NSDictionarys which contain information about each place.</strong>

The FlickrFetcher classes are available as part of lecture 9 and can be downloaded from <a href="http://www.stanford.edu/class/cs193p/cgi-bin/drupal/downloads-2011-fall" title="CS193p supporting artefacts" target="_blank">here</a>. After adding the new classes to my project, I signed up to Flickr to get an API key (surprisingly painless!) and then added the following code to my <em>main</em> method to get a feeling for the structure of Top Places (hint #3). 
<code lang="objc">
// First get a pointer to the topPlaces using the given FlickrFetcher method
NSArray *topPlaces = [FlickrFetcher topPlaces];
		
// How many top places in the array?
NSLog(@"Number of top places returned: %i", [topPlaces count]);
		
// What type of object is the value in the array?
Class arrayObjectClass = [[topPlaces objectAtIndex:0] class];
NSLog(@"Top places is an array of: %@", NSStringFromClass(arrayObjectClass));
		
// Display the contents of the first item in the array
NSLog(@"The description of the first top place is %@:", 
		[[topPlaces objectAtIndex:0] description]);
</code>
</br>
<strong>2. Create a UITabBarController-based user-interface with two tabs. The first shows a UITableView with the list of places (in alphabetical order) obtained in Required Task #1. The second shows a UITableView with a list of the 20 most recently viewed photos.</strong>

<strong>3. Anywhere a place appears in a table view in your application, the most detailed part of the location (e.g. the city name) should be the title of the table viewâs cell and the rest of the name of the location (e.g. state, province, country, etc.) should appear as the subtitle of the table view cell.</strong>

On my storyboard I dragged out two new table controllers, one for top places and the other for recently viewed photos. Using the menu option Editor -> Embed in, I embedded each of the two new table view controllers inside a navigation controller and then the the two navigation controllers into a single tab view controller. It's possible to use <cmd>click to highlight more than once controller to embed - nice :-). Tab Bar items can be named clicking on the Tab Bar item in each navigation controller and editing the Title field using the Attributes Inspector.

I created two new classes to implement each Table View Controller: <em>TopPlacesViewController</em> and <em>RecentPhotoListViewController</em>. The classes should subclasses of <em>UITableViewController</em> and should be attached to the respective storyboard controllers using the Identity Inspector.

For the TopPlacesViewController, there are three methods to deal with. The first, shown below, can just be deleted as we are not using sections here.
<code lang="objc>
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
#warning Potentially incomplete method implementation.
    // Return the number of sections.
    return 0;
}
</code>
My implementation of the second method looks like this:
<code lang="objc">
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    
	// Return the number of rows in the section.
    return [self.topPlaces count];
}
</code>
<em>topPlaces</em> is a publicly declared property of type <em>NSArray</em>, which I setup as part of the lifecycle call to <em>viewDidLoad</em>
<code lang="objc" highlight="5,6">
- (void)viewDidLoad {
	
	[super viewDidLoad];
	
	// Setup any model data from Flickr
	[self loadTopPlaces];	
	
	// Preserve selection between presentations.
   self.clearsSelectionOnViewWillAppear = NO;
}
</code>
<code lang="objc">
- (void)loadTopPlaces {
	
	// Only load data if not set up already
	if (self.topPlaces) return;
   
	// Create a sorted array of place descriptions
	NSArray *sortDescriptors = [NSArray arrayWithObject:
										 [NSSortDescriptor sortDescriptorWithKey:CONTENT_KEY 
																				 ascending:YES]];
	
	// Set up the array of top places, organised by place descriptions
	self.topPlaces = [[FlickrFetcher topPlaces] 
							sortedArrayUsingDescriptors:sortDescriptors];
}
</code>

For me, the third method to implement looks like this.
<code lang="objc">
- (UITableViewCell *)tableView:(UITableView *)tableView 
			cellForRowAtIndexPath:(NSIndexPath *)indexPath {
   
	static NSString *CellIdentifier = @"Top Place Descriptions";
   UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
	
	
	// Extract the place name information for the cell
	NSDictionary *topPlaceDictionary = [self.topPlaces objectAtIndex:indexPath.row];
	NSString *topPlaceDescription = [topPlaceDictionary objectForKey:CONTENT_KEY];
	
	// Format the top place description into the cell's title and subtitle
	// Check to see if place description has a comma
	NSRange firstComma = [topPlaceDescription rangeOfString:@","];
	
	// If no comma, then title is place description and we have no subtitle, otherwise set the 
	// title to everything before the comma and the subtitle to everything after it.
	if (firstComma.location == NSNotFound) {
		cell.textLabel.text = topPlaceDescription;
		cell.detailTextLabel.text = @"";
	} else {
		cell.textLabel.text = [topPlaceDescription substringToIndex:firstComma.location];
		cell.detailTextLabel.text = [topPlaceDescription substringFromIndex:
											  firstComma.location + 1];		
	}
    return cell;
}
</code>
The cell identifier must match with name given to the prototype cell identifier - set via the attributes inspector on the prototype table cell in the storyboard. 
</br>

<strong>4. When the user chooses a place from the list obtained in Required Task #1, you must query Flickr again to get an array of 50 recent photos from that place and display them in a list. Do this using the FlickrFetcher method photosInPlace:maxResults: (it returns an array of dictionaries, each of which contains info about a photo).</strong>

<strong>5. Any list of photos should display the photoâs title as the table view cellâs title and its description as the table view cellâs subtitle. If the photo has no title, use its description as the title. If it has no title or description, use âUnknownâ as the title.</strong>

I created a new TableViewController backed with a new class <em>PhotoListViewController</em>. The <em>TopPlacesViewController</em> segues to this controller (the segue can be created by <ctrl> dragging from the prototype cell in the storyboard). <em>prepareForSegue</em> sets up the new controller's model.
<code lang="objc">
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
	
	// Get a pointer to the dictionary at the currently selected row index
	NSDictionary *placeDictionary = 
	[self.topPlaces objectAtIndex:self.tableView.indexPathForSelectedRow.row];
	
	// Set up the photo descriptions in the PhotoDescriptionViewController
	[[segue destinationViewController] setPhotoList:[FlickrFetcher photosInPlace:placeDictionary
																	   maxResults:50]
													  withTitle:[[sender textLabel] text]];
}
</code>
As previously, we need to implement <em>tableView:numberofRowsInSection:</em> and <em>tableView:cellForRowAtIndexPath:</em> (<em>numberOfSectionsInTableView</em> can be deleted). 
<code lang="objc">
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
	
    // Return the number of rows in the section.
	return [self.photoList count];
}
</code>
<code lang="objc">
- (UITableViewCell *)tableView:(UITableView *)tableView 
			cellForRowAtIndexPath:(NSIndexPath *)indexPath {
	
   static NSString *CellIdentifier = @"Photo Descriptions";
   UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
	
	// Get a pointer to the dictionary that contains the details of photo
	NSDictionary *photosInPlace = [self.photoList objectAtIndex:indexPath.row];
	
	// Get a handle to the photo's title and description
	NSString *photoTitle = [photosInPlace objectForKey:TITLE_KEY]; 
	NSString *photoDescription = [photosInPlace valueForKeyPath:DESCRIPTION_KEY];
	
	// If the photo title is available set the cell's title to photoTitle and the cell's 
	// subtitle to the photo description
	if (photoTitle && ![photoTitle isEqualToString:@""]) {
		cell.textLabel.text = photoTitle;
		cell.detailTextLabel.text = photoDescription;
		// else if the photo description is available set the title equal to it
	} else if (photoDescription && ![photoDescription isEqualToString:@""]) { 
		cell.textLabel.text = photoDescription;
		cell.detailTextLabel.text = @"";
		// else set the title to Unknown
	} else {
		cell.textLabel.text = @"Unknown";
		cell.detailTextLabel.text = @"";
	}
	
	return cell;
}
</code>
</br>
<strong>6. When the user chooses a photo from any list, display its image inside a scrolling view that allows the user to pan and zoom (a reasonable amount). You obtain the URL for a Flickr photoâs image using FlickrFetcherâs urlForPhoto:format: (use Large).</strong>

I added a new UIViewController to the storyboard, backed by a a new class <em>PhotoViewController</em>. I dragged an image view into the new controller, and embedded the image view inside a scroll view.

To enable zooming, the scroll view zoom properties must be set - this can be done using the attributes inspector. I went with the numbers set in the lecture - 0.2 Min and 5 Max. <em>PhotoViewController</em> must implement the UIScrollViewDelegate protocol and to tell the scroll view what to zoom: 
<code lang="objc">
- (UIView *)viewForZoomingInScrollView:(UIScrollView *)scrollView {
	return self.imageView;
}
</code>
The <em>PhotoViewController</em> model is setup via the <em>prepareForSegue</em> method in <em>PhotoListViewController</em>
<code lang="objc">
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
	
	// Get a handle to the photo dictionary at the currently selected row
	NSDictionary *photoDictionary = 
	[self.photoList objectAtIndex:self.tableView.indexPathForSelectedRow.row];
	
	// Set the retrieved image in the destination controller
	[[segue destinationViewController] setPhoto:photoDictionary];
}
</code>
.. and the <em>viewDidLoad</em> method in <em>PhotoViewController</em> is responsible for setting the image, screen title and view geometry.
<code lang="objc">
- (void)viewDidLoad {	
	[super viewDidLoad];	
	
	// Set this instance as the scroll view delegate
	self.scrollView.delegate = self;
	
	// Place the image in the image view
	self.imageView.image = [UIImage imageWithData:
									[NSData dataWithContentsOfURL:
									 [FlickrFetcher urlForPhoto:self.photo format:FlickrPhotoFormatLarge]]];

	// Set the title of the image
	self.title = [self.photo objectForKey:PHOTO_TITLE_KEY];
	
	// Setup the size of the scroll view
	self.scrollView.contentSize = self.imageView.image.size;
	
	// Setup the frame of the image
	self.imageView.frame = 
		CGRectMake(0, 0, self.imageView.image.size.width, self.imageView.image.size.height);
	
	
}
</code>
</br>
<strong>7. Make sure the photoâs title is somewhere on screen whenever you are showing the photo image to the user.</strong>

This is as above; part of the <em>viewDidLoad</em> method implementation.
</br>
<strong>8. Whenever a photoâs image appears on screen, it should initially be zoomed to show as much of the photo as possible with no extra, unused space. It is not necessary to continue to do this as the user rotates the device or zooms in and out on the photo by pinching.</strong>

I implemented the <em>viewWillLayoutSubviews</em> method as below:
<code lang="objc">
- (void)viewWillLayoutSubviews { 

	// Width ratio compares the width of the viewing area with the width of the image	
	float widthRatio = self.view.bounds.size.width / self.imageView.image.size.width;
	
	// Height ratio compares the height of the viewing area with the height of the image	
	float heightRatio = self.view.bounds.size.height / self.imageView.image.size.height; 
	
	// Update the zoom scale
	self.scrollView.zoomScale = MAX(widthRatio, heightRatio);	

}
</code>
Putting the code inside <em>viewWillLayoutSubviews</em> meant that the image was resized each time the device was rotated. Not a requirement - but it comes for free :-)

I also needed to tweak the springs and struts on both the scroll view and the image view, to get things looking right.
</br>
<strong>9. Your application must work in both portrait and landscape orientations on the iPhone. Support for the iPad is optional (though it will be required next week, so you can save time later by implementing it now). Use appropriate platform-specific UI idioms (e.g., you must use UINavigationControllers to present the information on the iPhone).
</strong>
To work in both orientations:
<code lang="objc">
- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation {
	return YES;
}
</code>
which should be setup in all of the controllers that are part of the navigation controller...

I'm planning to look at the iPad implementation as part of the extra credit task. 
</br>
<strong>10. The recents tab must show the list of most recently view photos in chronological order of viewing with the most recent at the top, and no duplicates in the list. It is sufficient to only update the list each time it (re)appears on screen (i.e. in viewWillAppear:). A photo can be uniquely identified by its âidâ entry in its dictionary.</strong>

<strong>11. The list of recents photos should be saved in NSUserDefaults. The arrays you get back from the FlickrFetcher methods are all property lists.</strong>

The recently viewed photos are stored whenever the <em>viewWillAppear</em> in <em>PhotoViewController</em> is run. My implementation looks like this.

<code lang="objc">
- (void)viewWillAppear:(BOOL)animated {
	
	
	// We need to store the photo as an NSUserDefault, since it is recently viewed
	// First get a handle to the standard user defaults
	NSUserDefaults *defaults = [NSUserDefaults standardUserDefaults];
	
	// Bring out the current list of recently viewed photos
	NSMutableArray *recentlyViewedPhotos = 
	[[defaults objectForKey:RECENT_PHOTOS_KEY] mutableCopy];
	
	// If we don't have any yet, then created an empty collection
	if (!recentlyViewedPhotos) recentlyViewedPhotos = [NSMutableArray array];
	
	// If we have too many photos already in our recently viewed list, then remove the one that 
	// was is first in the list - ie. added the longest time ago.
	if (recentlyViewedPhotos.count > TOO_MANY_PHOTOS) {
		[recentlyViewedPhotos removeObjectAtIndex:0];
	}
	
	// We need to check to see whether or not the photo is already stored in NSUserDefaults
	// So first get a handle to the id of the photo we are viewing
	NSString *photoID = [self.photo objectForKey:PHOTO_ID_KEY];
	
	// Then interate over our recently viewed photos
	for (int i = 0; i < recentlyViewedPhotos.count; i++) {
		NSDictionary *photo = [recentlyViewedPhotos objectAtIndex:i];
		if ([[photo objectForKey:PHOTO_ID_KEY] isEqualToString:photoID]) {
			// And remove the instance of the photo if we should find one
			[recentlyViewedPhotos removeObject:photo];
			continue;
		}
	}

	// Add the photo being to the top of the recently viewed photo list
	[recentlyViewedPhotos addObject:self.photo];
	
	// Add the updated collection back into user defaults
	[defaults setObject:recentlyViewedPhotos forKey:RECENT_PHOTOS_KEY];
	
	// Save the defaults
	[defaults synchronize];
		
}
</code>

I created a new controller class <em>RecentPhotoListViewController</em>. Given how similar the functionality is to the <em>PhotoListViewController</em>, the new class I created was inherited from the latter.

<code lang="objc">
@interface RecentPhotoListViewController : PhotoListViewController

@end
</code>

In fact the only addition I made to the new controller was to make a call to setup the model to use the photo list stored in <em>NSUserDefaults</em>. I did this inside the <em>viewWillAppear</em> method.
<code lang="objc">
- (void)setupModel {
	
	// Load photo list from NSUserDefaults
	NSUserDefaults *defaults = [NSUserDefaults standardUserDefaults];
	self.photoList = [[[defaults objectForKey:RECENT_PHOTOS_KEY] reverseObjectEnumerator] 
							allObjects];
		
	[self.tableView reloadData];

}
</code>

.. And that's it I think. The full source code can be found <a href="https://github.com/i4-apps/Top-Places/tree/ba128e2da571067a0eef4931caca42477a1078ed" title="Source code for assignment 4">here</a> and a pretty picture can be seen <a href="http://i4-apps.com/?attachment_id=754" title="Rainy day in London!" target="_blank">here</a>. Enjoy!

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>676</wp:post_id>
		<wp:post_date>2012-04-30 09:06:32</wp:post_date>
		<wp:post_date_gmt>2012-04-30 09:06:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>assignment-4-required-tasks</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="all-assignments"><![CDATA[All assignments]]></category>
		<category domain="post_tag" nicename="assignment-4"><![CDATA[assignment 4]]></category>
		<category domain="post_tag" nicename="cs193p"><![CDATA[CS193p]]></category>
		<category domain="post_tag" nicename="fall-2011"><![CDATA[fall 2011]]></category>
		<category domain="post_tag" nicename="stanford-university"><![CDATA[stanford university]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>s2mail</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>149</wp:comment_id>
			<wp:comment_author><![CDATA[newbee]]></wp:comment_author>
			<wp:comment_author_email>mail_nuri@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>81.159.209.70</wp:comment_author_IP>
			<wp:comment_date>2012-05-17 14:24:39</wp:comment_date>
			<wp:comment_date_gmt>2012-05-17 14:24:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,
 When I do an NSLog of the description of the photo this is what I get:
accuracy = 15;
        context = 0;
        dateupload = 1337262893;
        description =         {
            "_content" = "Snapped from my trip to London this past March :)";
        };
        farm = 6;
        "geo_is_contact" = 0;
        "geo_is_family" = 0;
        "geo_is_friend" = 0;
        "geo_is_public" = 1;
        id = 7215426056;
        isfamily = 0;
        isfriend = 0;
        ispublic = 1;
        latitude = "51.505991";
        longitude = "-0.074973";
        owner = "50543181@N02";
        ownername = "RLW photography";
        "place_id" = v70Y8qlTUrrLiiTZAg;
        secret = e23080c93e;
        server = 5348;
        tags = "uk travel england london architecture towerbridge britain londres british londra inglaterre nikond7000";
        title = "Tower Bridge";
        woeid = 20094363;

and I have also set:
#define DESCRIPTION_KEY @"description._content"

But when I segue into PhotoListTableViewController, it only displays the title and not the subtitle. I have appropriately set the cell's textLabel and detailTextLabel.

I was wondering if you got the subtitles for the list of photos. 

Thanks.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>155</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.i4-apps.com</wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-05-19 10:29:37</wp:comment_date>
			<wp:comment_date_gmt>2012-05-19 10:29:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi .. Yes - the subtitles are appearing for me. There seems to be a lot of photos where there was no description._content â¦ for me I am setting and empty subtitle in these cases...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>149</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>188</wp:comment_id>
			<wp:comment_author><![CDATA[Wilson]]></wp:comment_author>
			<wp:comment_author_email>weicong.kong@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>111.222.30.83</wp:comment_author_IP>
			<wp:comment_date>2012-06-07 01:06:15</wp:comment_date>
			<wp:comment_date_gmt>2012-06-07 01:06:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for sharing with your code and experience. Your codes are pretty neat, good work! I am a new comer to ios, actually to programming, I found I was using too many lines to achieve the same tasks compared to yours. I am still doning the 2010 fall assigement, kind of similar, will come back in short frequence to check your update.:)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>189</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.i4-apps.com</wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-06-07 08:11:07</wp:comment_date>
			<wp:comment_date_gmt>2012-06-07 08:11:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Glad it's helped :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>188</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>190</wp:comment_id>
			<wp:comment_author><![CDATA[Wilson]]></wp:comment_author>
			<wp:comment_author_email>weicong.kong@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>111.222.30.83</wp:comment_author_IP>
			<wp:comment_date>2012-06-07 08:31:10</wp:comment_date>
			<wp:comment_date_gmt>2012-06-07 08:31:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[By the way, I didnt see your implementation to set the network activity indicator on. I failed to do that by just setting the property networkActivityIndicator... Of [UIApplication sharedApplication] to YES and NO. Can U explain the mechanism a little bit?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>189</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>191</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.i4-apps.com</wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-06-07 08:39:12</wp:comment_date>
			<wp:comment_date_gmt>2012-06-07 08:39:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi - I think this is described in the latest post - Assignment 5: tasks 1-2]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>190</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>193</wp:comment_id>
			<wp:comment_author><![CDATA[jdizzle]]></wp:comment_author>
			<wp:comment_author_email>jdizzle@foo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>108.80.231.143</wp:comment_author_IP>
			<wp:comment_date>2012-06-07 17:39:26</wp:comment_date>
			<wp:comment_date_gmt>2012-06-07 17:39:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great job and thanks for sharing your work.   I did notice a typo in your source code.

In viewWillAppear, the last line should have an upper case U.   Easy enough to catch :-)

- (void) viewWillAppear:(BOOL)animated {
	// Hide the navigation bar for view controllers when this view appears
	[self.navigationController setNavigationBarHidden:YES animated:animated];
	[super viewWillAppear:animated];
	[self setUpModel];                            // source code was setupModel which generated a build error
}]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>194</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.i4-apps.com</wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-06-07 17:47:03</wp:comment_date>
			<wp:comment_date_gmt>2012-06-07 17:47:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks :-)

My method is called setupModel with a lowercase u, so seems to build ok for me without the fixâ¦.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>193</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>195</wp:comment_id>
			<wp:comment_author><![CDATA[jdizzle]]></wp:comment_author>
			<wp:comment_author_email>jdizzle@foo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>108.80.231.143</wp:comment_author_IP>
			<wp:comment_date>2012-06-07 18:37:44</wp:comment_date>
			<wp:comment_date_gmt>2012-06-07 18:37:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[So it was my mistake. :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>194</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>196</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.i4-apps.com</wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-06-07 18:39:28</wp:comment_date>
			<wp:comment_date_gmt>2012-06-07 18:39:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[heheâ¦ yep I think so :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>195</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>197</wp:comment_id>
			<wp:comment_author><![CDATA[jdizzle]]></wp:comment_author>
			<wp:comment_author_email>jdizzle@foo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>108.80.231.143</wp:comment_author_IP>
			<wp:comment_date>2012-06-07 18:39:34</wp:comment_date>
			<wp:comment_date_gmt>2012-06-07 18:39:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[BTW, I downloaded a zip file of your project from github but the flickrfetcher helper files were missing.   I tried dragging my local copies into the project but I can't seem to get it to work.   Any ideas?  I'm just curious.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>198</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.i4-apps.com</wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-06-07 18:41:06</wp:comment_date>
			<wp:comment_date_gmt>2012-06-07 18:41:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Should be there â¦ https://github.com/i4-apps/Top-Places/tree/master/FlickrFetcher]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>197</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>assignment1</title>
		<link>http://www.i4-apps.com/?attachment_id=688</link>
		<pubDate>Sat, 28 Apr 2012 14:09:18 +0000</pubDate>
		<dc:creator>me</dc:creator>
		<guid isPermaLink="false">http://i4-apps.com/wp-content/uploads/2012/04/assignment1.tiff</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[RPN Calculator, assignment 1]]></excerpt:encoded>
		<wp:post_id>688</wp:post_id>
		<wp:post_date>2012-04-28 14:09:18</wp:post_date>
		<wp:post_date_gmt>2012-04-28 14:09:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>assignment1</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.i4-apps.com/wp-content/uploads/2012/04/assignment1.tiff</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/04/assignment1.tiff]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>assignment2</title>
		<link>http://www.i4-apps.com/?attachment_id=690</link>
		<pubDate>Sat, 28 Apr 2012 14:12:12 +0000</pubDate>
		<dc:creator>me</dc:creator>
		<guid isPermaLink="false">http://i4-apps.com/wp-content/uploads/2012/04/assignment2.tiff</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>690</wp:post_id>
		<wp:post_date>2012-04-28 14:12:12</wp:post_date>
		<wp:post_date_gmt>2012-04-28 14:12:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>assignment2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.i4-apps.com/wp-content/uploads/2012/04/assignment2.tiff</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/04/assignment2.tiff]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>assignment3-graphview-screenshot</title>
		<link>http://www.i4-apps.com/?attachment_id=691</link>
		<pubDate>Sat, 28 Apr 2012 14:12:16 +0000</pubDate>
		<dc:creator>me</dc:creator>
		<guid isPermaLink="false">http://i4-apps.com/wp-content/uploads/2012/04/assignment3-graphview-screenshot.tiff</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>691</wp:post_id>
		<wp:post_date>2012-04-28 14:12:16</wp:post_date>
		<wp:post_date_gmt>2012-04-28 14:12:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>assignment3-graphview-screenshot</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.i4-apps.com/wp-content/uploads/2012/04/assignment3-graphview-screenshot.tiff</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/04/assignment3-graphview-screenshot.tiff]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Assignment 4: photo view</title>
		<link>http://www.i4-apps.com/assignment-4-required-tasks/assignment4/</link>
		<pubDate>Mon, 30 Apr 2012 08:40:16 +0000</pubDate>
		<dc:creator>me</dc:creator>
		<guid isPermaLink="false">http://i4-apps.com/wp-content/uploads/2012/04/assignment4.tiff</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Rainy London]]></excerpt:encoded>
		<wp:post_id>754</wp:post_id>
		<wp:post_date>2012-04-30 08:40:16</wp:post_date>
		<wp:post_date_gmt>2012-04-30 08:40:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>assignment4</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>676</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://www.i4-apps.com/wp-content/uploads/2012/04/assignment4.tiff</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2012/04/assignment4.tiff]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Assignment 4: extra credit</title>
		<link>http://www.i4-apps.com/assignment-4-extra-credit/</link>
		<pubDate>Wed, 02 May 2012 19:08:30 +0000</pubDate>
		<dc:creator>me</dc:creator>
		<guid isPermaLink="false">http://i4-apps.com/?p=788</guid>
		<description></description>
		<content:encoded><![CDATA[This post gives my solution for the assignment 4 extra credit tasks of the excellent CS193p lecture series. It also includes the iPad storyboard, so that the application runs on both iPhone and iPad.

If you wish...
<!--more-->

The new iPad storyboard I created can be found <a href="https://github.com/i4-apps/Top-Places/tree/8826809b1a5c8ab142d413b5ddbedd1df868a205" title="iPad storyboard">here</a>. I used a combination of copy and pasting from the iPhone storyboard, and re-building. The storyboard needs to joined up again with the code, setting things such as the Controller classes, identifiers, tab names and springs and segues. Straightforward enoughâ¦

To actually make it all work nicely though, I found a little more tricky :-). 

I made the <em>PhotoViewController</em> the UISplitViewControllerDelegate (hint #12). It seems that in iOS 5.1, the new way of managing the split view in portrait mode is to allow the master controller to slide in from the left hand side, rather than the use a popover - which is the mechanism shown in the lectures. This seems a lot simpler to implement, as there is no 'button dance' to do. In fact, to get things working all that was necessary was to set up the delegate and add the following delegate method.
<code lang="objc">
- (void)splitViewController:(UISplitViewController *)svc 
	  willHideViewController:(UIViewController *)aViewController 
			 withBarButtonItem:(UIBarButtonItem *)barButtonItem 
		 forPopoverController:(UIPopoverController *)pc {
}
</code>
.. no implementation you'll notice and it seems as if the other two delegate methods are no longer necessary. What is weird is, that even though this method isn't doing anything, if it isn't present then the master doesn't slide out from the left with a swipe gesture. Seems like a minor bug to me. If anyone understands what's going on here, would be great to know!

The next thing to do is refresh the <em>PhotoViewController</em> each time a new photo is selected. Hint #13 suggests the method to implement - as below.

<code lang="objc">
- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
	
	// Get a handle to the detail view controller
	PhotoViewController *photoViewController = 
		[[self.splitViewController viewControllers] lastObject];
	
	if (photoViewController) {
		// Set up the photoViewController model and synchronize it's views
		[photoViewController refreshWithPhoto: [self photoDictionary]];
	} // otherwise handled by the segue
	
}
</code>
It's a slightly different implementation to <em>prepareForSegue</em> .. I think it has to be, because on the iPad the <em>PhotoViewController</em> has already run most of the view lifecycle methods so <em>viewWillAppear</em> and <em>viewDidLoad</em> won't be called - meaning that the new photo won't be set up. (Unless there's an easier way to get the view to reload programmatically?)

<em>refreshWithPhoto</em> is a new public method on the <em>photoViewController</em>. It's implementation looks like this:
<code lang="objc">
- (void)refreshWithPhoto:(NSDictionary *)photoDictionary {
	
	// Setup the model
	self.photo = photoDictionary;
	
	// Save the photo
	[self storePhoto];
	
	// Set up the view
	[self synchronizeView];
	
	// Set the zoom level of the view to fill up the screen
	[self fillView];
	
}
</code>
<code lang="objc">
- (void) storePhoto {
	
	// We need to store the photo as an NSUserDefault, since it is recently viewed
	// First get a handle to the standard user defaults
	NSUserDefaults *defaults = [NSUserDefaults standardUserDefaults];
	
	// Bring out the current list of recently viewed photos
	NSMutableArray *recentlyViewedPhotos = 
	[[defaults objectForKey:RECENT_PHOTOS_KEY] mutableCopy];
	
	// If we don't have any yet, then created an empty collection
	if (!recentlyViewedPhotos) recentlyViewedPhotos = [NSMutableArray array];
	
	// If we have too many photos already in our recently viewed list, then remove the one that 
	// was is first in the list - ie. added the longest time ago.
	if (recentlyViewedPhotos.count > TOO_MANY_PHOTOS) {
		[recentlyViewedPhotos removeObjectAtIndex:0];
	}
	
	// We need to check to see whether or not the photo is already stored in NSUserDefaults
	// So first get a handle to the id of the photo we are viewing
	NSString *photoID = [self.photo objectForKey:PHOTO_ID_KEY];
	
	// Then interate over our recently viewed photos
	for (int i = 0; i < recentlyViewedPhotos.count; i++) {
		NSDictionary *photo = [recentlyViewedPhotos objectAtIndex:i];
		if ([[photo objectForKey:PHOTO_ID_KEY] isEqualToString:photoID]) {
			// And remove the instance of the photo if we should find one
			[recentlyViewedPhotos removeObject:photo];
			continue;
		}
	
	}
	
	// Add the photo currently being viewed to the top of the recently viewed photo list
	[recentlyViewedPhotos addObject:self.photo];
	// Add the updated collection back into user defaults
	
	[defaults setObject:recentlyViewedPhotos forKey:RECENT_PHOTOS_KEY];
		
	// Save the defaults
	[defaults synchronize];
}
</code>
<code lang="objc" highlight="12,13">
- (void)synchronizeView {

	// Place the image in the image view
	self.imageView.image = [UIImage imageWithData:
									[NSData dataWithContentsOfURL:
									 [FlickrFetcher urlForPhoto:self.photo 
																format:FlickrPhotoFormatLarge]]];
	
	// Set the title of the image
	self.title = [self.photo objectForKey:PHOTO_TITLE_KEY];
	
	// Reset the zoom scale back to 1
	self.scrollView.zoomScale = 1;
	
	// Setup the size of the scroll view
	self.scrollView.contentSize = self.imageView.image.size;

	// Setup the frame of the image
	self.imageView.frame = 
	CGRectMake(0, 0, self.imageView.image.size.width, self.imageView.image.size.height);
}
</code>
<code lang="objc">
- (void)fillView {
	
	// Width ratio compares the width of the viewing area with the width of the image	
	float widthRatio = self.view.bounds.size.width / self.imageView.image.size.width;
	
	// Height ratio compares the height of the viewing area with the height of the image	
	float heightRatio = self.view.bounds.size.height / self.imageView.image.size.height; 
	
	// Update the zoom scale
	self.scrollView.zoomScale = MAX(widthRatio, heightRatio);
	
}
</code>
The three new methods encapsulate setting up the image and scroll view, saving the photo into NSUserDefaults and setting the zoom on the scroll view to maximise the visible photo. In essence these are the same code snippets we had before, run directly within <em>viewDidLoad</em>, <em>viewWillAppear</em> and <em>viewWillLayoutSubviews</em>. I updated these view lifecycle methods to call into the new private methods. Seems to work ok :-)

And for the extra task:

<strong>1. Divide your list of top places into sections (in the table view sense) by country. This will require a little bit different data structure in that MVC.</strong>

I set up a couple of new properties to put the top places data into a more accessible data structure: <em>placesByCountry</em> and <em>sectionHeaders</em>. I set these up as part of my existing <em>loadTopPlaces</em> method.
<code lang="objc">
- (void)loadTopPlaces {
	
	// Only load data if not set up already
	if (self.topPlaces) return;
   
	// Create a sorted array of place descriptions
	NSArray *sortDescriptors = [NSArray arrayWithObject:
										 [NSSortDescriptor sortDescriptorWithKey:CONTENT_KEY 
																				 ascending:YES]];
	
	// Set up the array of top places, organised by place descriptions
	self.topPlaces = [[FlickrFetcher topPlaces] 
							sortedArrayUsingDescriptors:sortDescriptors];
	

	// We want to divide the places up by country, so we can use a dictionary with the country
	// names as key as the places as values
	NSMutableDictionary *placesByCountry = [NSMutableDictionary dictionary];
	
	// For each place
	for (NSDictionary *place in self.topPlaces) {
		// extract the country name
		NSString *country = [self parseForCountry:place];	
		// If the country isn't already in the dictionary, add it with a new array
		if (![placesByCountry objectForKey:country]) {
			[placesByCountry setObject:[NSMutableArray array] forKey:country];
		}
		// Add the place to the countries' value array
		[(NSMutableArray *)[placesByCountry objectForKey:country] addObject:place];		
	}
	
	// Set the place by country
	self.placesByCountry = [NSDictionary dictionaryWithDictionary:placesByCountry];
	
	// Set up the section headers in alphabetical order	
	self.sectionHeaders = [[placesByCountry allKeys] sortedArrayUsingSelector: 
								  @selector(caseInsensitiveCompare:)];
}
</code>
<code lang="objc">
- (NSString *)parseForCountry: (NSDictionary *) topPlace {
	
	// Get the place information from the given topPlace
	NSString *placeInformation = [topPlace objectForKey:CONTENT_KEY];
	
	// Search the place information for the last comma. 
	NSRange lastComma = [placeInformation rangeOfString:@"," options:NSBackwardsSearch];
	
	// Return the text that comes after the last comma
	if (lastComma.location != NSNotFound) {
		return [placeInformation substringFromIndex:lastComma.location + 2];
	} else return @"";
}
</code>

To get the sections displaying, I also needed to make some changes to the data source delegate methods:
<code lang="objc">
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {

	// Return the number of sections
	return self.sectionHeaders.count;
}
</code>
<code lang="objc">
- (NSString *) tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)section {
	
	// Return the header at the given index
	return [self.sectionHeaders objectAtIndex:section];	
}
</code>
<code lang="objc">
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
   
	// Return the number of rows for the given the section
	return [[self.placesByCountry objectForKey:
				[self.sectionHeaders objectAtIndex:section]] count];

}
</code>
<code lang="objc" highlight="8,9,10,11">
- (UITableViewCell *)tableView:(UITableView *)tableView 
			cellForRowAtIndexPath:(NSIndexPath *)indexPath {
   
	static NSString *CellIdentifier = @"Top Place Descriptions";
   UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];


	// Get a handle the dictionary that contains the selected top place information
	NSDictionary *topPlaceDictionary = 
	[[self.placesByCountry objectForKey:[self.sectionHeaders objectAtIndex:indexPath.section]] 
	 objectAtIndex:indexPath.row];

	// Extract the place name information for the cell
	NSString *topPlaceDescription = [topPlaceDictionary objectForKey:CONTENT_KEY];
	
	// Format the top place description into the cell's title and subtitle
	// Check to see if place description has a comma
	NSRange firstComma = [topPlaceDescription rangeOfString:@","];
	
	// If no comma, then title is place description and we have no subtitle, otherwise set the 
	// title to everything before the comma and the subtitle to everything after it.
	if (firstComma.location == NSNotFound) {
		cell.textLabel.text = topPlaceDescription;
		cell.detailTextLabel.text = @"";
	} else {
		cell.textLabel.text = [topPlaceDescription substringToIndex:firstComma.location];
		cell.detailTextLabel.text = [topPlaceDescription substringFromIndex:
											  firstComma.location + 1];		
	}	
   return cell;	 
}
</code>

And a minor update to the <em>prepareForSegue</em> method:
<code lang="objc" highlight="3,4,6,7,8,9">
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
	
	int section = self.tableView.indexPathForSelectedRow.section;
	int row = self.tableView.indexPathForSelectedRow.row;
		
	// Identify the selected place from within the places by country dictionary
	NSDictionary *placeDictionary = 
		[[self.placesByCountry valueForKey:
		  [self.sectionHeaders objectAtIndex:section]] objectAtIndex:row];
	
	[self.topPlaces objectAtIndex:self.tableView.indexPathForSelectedRow.row];
	
	// Set up the photo descriptions in the PhotoDescriptionViewController
	[[segue destinationViewController] setPhotoList:[FlickrFetcher photosInPlace:placeDictionary
																							maxResults:50]
													  withTitle:[[sender textLabel] text]];
}
</code>

And I think that's it for assignment 4. The full source code snapshot is available <a href="https://github.com/i4-apps/Top-Places/tree/04ab118f4ee0a37dd992859ef671fded9abf6655" title="Source code for assignment 4: extra credit tasks">here</a>. It'll be good to get back to some lectures :-)


 





]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>788</wp:post_id>
		<wp:post_date>2012-05-02 19:08:30</wp:post_date>
		<wp:post_date_gmt>2012-05-02 19:08:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>assignment-4-extra-credit</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="all-assignments"><![CDATA[All assignments]]></category>
		<category domain="post_tag" nicename="assignment-4"><![CDATA[assignment 4]]></category>
		<category domain="post_tag" nicename="cs193p"><![CDATA[CS193p]]></category>
		<category domain="post_tag" nicename="fall-2011"><![CDATA[fall 2011]]></category>
		<category domain="post_tag" nicename="stanford-university"><![CDATA[stanford university]]></category>
		<category domain="post_tag" nicename="top-places"><![CDATA[top places]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>s2mail</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Assignment 5: tasks 1-2</title>
		<link>http://www.i4-apps.com/assignment-5-tasks-1-2/</link>
		<pubDate>Thu, 31 May 2012 12:12:06 +0000</pubDate>
		<dc:creator>me</dc:creator>
		<guid isPermaLink="false">http://i4-apps.com/?p=854</guid>
		<description></description>
		<content:encoded><![CDATA[This post gives my solution for the first two tasks of assignment 5. This assignment steps thing up a notch, introducing multithreading, caching and the map kit - I'm going to break it into bite size chunks :-)

So.. if you fancy a multi-threaded snackâ¦.
<!--more-->
<strong>1. Your application must implement all the required tasks from the last assignment (and all the required tasks in this assignment) without doing any Flickr fetching or file system interactions in the main thread. Your user-interface should be responsive to the user at all times (i.e. the main thread should never be blocked).</strong>

At the moment, there are three places where my application is downloading from Flickr. 
In the <em>TopPlacesViewController</em>, the <em>loadTopPlaces</em> method is calling:
<code lang="objc"> [FlickrFetcher topPlaces] </code>
and the <em>prepareForSegue</em> method is calling:
<code lang="objc"> [FlickrFetcher photosInPlace]</code>
Finally, in <em>PhotoViewController</em> my <em>synchronizeView</em> method is calling:
<code lang="objc"> [NSData dataWithContentsOfURL:[FlickrFetcher urlForPhoto:self.photo]] </code>


The <em>loadTopPlaces</em> method in the TopPlacesViewController is responsible for setting up the controller's model. There is no UI management in this method so it is safe to run it entirely outside of the main thread. I added the necessary threading code into the <em>viewDidLoad</em> method as highlighted below - this is the only place where <em>loadTopPlaces</em> is being called.

<code lang="objc" highlight = "8-24">
- (void)viewDidLoad {
	
	[super viewDidLoad];
	
	// Animate the spinner
	[self.spinner startAnimating];
	
	// Initialise the queue used to download from flickr
	dispatch_queue_t dispatchQueue = dispatch_queue_create("q_loadTopPlaces", NULL);
	
	// Use the download queue to asynchronously get the list of Top Places
	dispatch_async(dispatchQueue, ^{ 
		
		[self loadTopPlaces];
		
		// Use the main queue to refresh update the view
		dispatch_async(dispatch_get_main_queue(), ^{	
			[self.tableView reloadData]; // Seems to be ok without check for self.tableView.window
			[self.spinner stopAnimating];
		});
		
	});	
	// Release the queue
	dispatch_release(dispatchQueue);	
	
	// Preserve selection between presentations.
   self.clearsSelectionOnViewWillAppear = NO;
}
</code>

â¦ and in <em>prepareForSegue</em> we need to tweak the code a little to isolate the Flickr download from the setting of the photo list.
<code lang="objc" highlight="13-32">
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
	
	int section = self.tableView.indexPathForSelectedRow.section;
	int row = self.tableView.indexPathForSelectedRow.row;
	
	// Identify the selected place from within the places by country dictionary
	NSDictionary *placeDictionary = 
		[[self.placesByCountry valueForKey:
		  [self.sectionHeaders objectAtIndex:section]] objectAtIndex:row];
	
	[self.topPlaces objectAtIndex:self.tableView.indexPathForSelectedRow.row];
	
	// Initialise the queue used to download from flickr
	dispatch_queue_t dispatchQueue = dispatch_queue_create("q_photosInPlace", NULL);
	[self.spinner startAnimating];	
	
	// Using the dowload queue, fetch the array of photos based on the selected dictionary
	dispatch_async(dispatchQueue, ^{ 
		
		NSArray *photos = [FlickrFetcher photosInPlace:placeDictionary maxResults:50];		

		// Use the main queue to prepare for segue 
		dispatch_async(dispatch_get_main_queue(), ^{	
			// Set up the photo descriptions in the PhotoDescriptionViewController
			[[segue destinationViewController] setPhotoList:photos
															  withTitle:[[sender textLabel] text]];			
			[[[segue destinationViewController] tableView] reloadData];
			[self.spinner stopAnimating];
		});
		
	});	
	dispatch_release(dispatchQueue);
	
}
</code>

In the <em>synchronizeView</em> method in the <em>PhotoViewController</em> the Flickr downloading is mixed in with UI manipulation. This means we can't run this method in anything other than the main queue. To resolve this, I replaced <em>synchronizeView</em> with the following two new methods
<code lang="objc">
- (NSData*) fetchImage {	
	
   // Return the image from Flickr
	return [NSData dataWithContentsOfURL: 
			  [FlickrFetcher urlForPhoto:self.photo format:FlickrPhotoFormatLarge]];	
}
</code>

<code lang="objc">
- (void)synchronizeViewWithImage:(NSData *) imageData {

	// Place the image in the image view
	self.imageView.image = [UIImage imageWithData:imageData];
									 	
	// Set the title of the image
	self.title = [self.photo objectForKey:PHOTO_TITLE_KEY];
	
	// Reset the zoom scale back to 1
	self.scrollView.zoomScale = 1;
	
	// Setup the size of the scroll view
	self.scrollView.contentSize = self.imageView.image.size;

	// Setup the frame of the image
	self.imageView.frame = 
	CGRectMake(0, 0, self.imageView.image.size.width, self.imageView.image.size.height);	
}
</code>

I then revisited and refactored <em>refreshWithPhoto</em>, which now looks like this.

<code lang="objc">
- (void)refreshWithPhoto:(NSDictionary *)photoDictionary {
	
	// Setup the model
	self.photo = photoDictionary;
	
	// Refresh the view
	[self refresh];	
}
</code>
... with the new <em>refresh</em> method doing all the hard work.
<code lang="objc">
- (void)refresh {
	
	[self.spinner startAnimating];
	
	// Initialise the queue used to download from flickr
	dispatch_queue_t dispatchQueue = dispatch_queue_create("q_photo", NULL);
	
	// Load the image using the queue
	dispatch_async(dispatchQueue, ^{ 
		NSString *photoID = [self.photo objectForKey:PHOTO_ID_KEY];
		NSData *imageData = [self fetchImage];
		
		// Use the main queue to store the photo in NSUserDefaults and to display
		dispatch_async(dispatch_get_main_queue(), ^{	
			
			// Only store and display if another photo hasn't been selected
			if ([photoID isEqualToString:[self.photo objectForKey:PHOTO_ID_KEY]]) {
				[self storePhoto];
				[self synchronizeViewWithImage:imageData]; // Sets the zoom level to fill screen
				[self fillView];
				[self.spinner stopAnimating];
			}			
		});		
	});	
	dispatch_release(dispatchQueue);	
}
</code>

As another method calling <em>synchronizeView</em>, I also had to tweak <em>viewWillAppear</em> slightly.
<code lang="objc">
- (void)viewWillAppear:(BOOL)animated {	
	
	// Refresh if we have a photo set
	if (self.photo) [self refresh];
}
</code>
</br>
<strong>2. If the user is waiting for something (other than a thumbnail) to update in a view, display a UIActivityIndicatorView (spinning wheel) somewhere appropriate until it fills in (the network activity indicator in the little status bar at the very top of the screen is not an acceptable substitute for this). The user interface should be completely responsive while a wheel is spinning (e.g. the user could hit the back button or a tab and navigate away from the spinning wheel if so desired). Also, the user- interface should never ânavigateâ except directly in response to a user action.</strong>

The starting and stopping of the spinner animation is shown above in part 1.

The spinner in the <em>TopPlacesViewController</em> is created through lazy instantiation and placed in the tab bar. 
<code lang="objc">
- (UIActivityIndicatorView *)spinner {
	
	// If we don't have a spinner, then set one up
	if (!_spinner) {
		
	 	// Setup the spinner
		_spinner =[[UIActivityIndicatorView alloc] initWithActivityIndicatorStyle:
					  UIActivityIndicatorViewStyleWhite];		
		
		// Add the spinner to the tab bar
		[self.tabBarController.tabBar addSubview:_spinner];			
		
	}
	
	return _spinner;
}
</code>
Each time a table view is loading, the spinner spins in the top right corner of the Top Places tab. 

For the photo loading, I dragged out a new UIActivityIndicator into the middle of the photo view on both the iPhone and iPad storyboards, and then connected each to an outlet in <em>PhotoViewController</em>. I found things worked best with the UIActivityIndicator view outside of the Scroll view and below it in the document outline. I seemed to get funny behaviours otherwise...

And that's it I think for the first of couple of tasks. I hope to continue posting, but probably at a slower pace as I am busy job-hunting!

So.. until next time...


 



]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>854</wp:post_id>
		<wp:post_date>2012-05-31 12:12:06</wp:post_date>
		<wp:post_date_gmt>2012-05-31 12:12:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>assignment-5-tasks-1-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="all-assignments"><![CDATA[All assignments]]></category>
		<category domain="post_tag" nicename="assignment-5"><![CDATA[assignment 5]]></category>
		<category domain="post_tag" nicename="cs193p"><![CDATA[CS193p]]></category>
		<category domain="post_tag" nicename="fall-2011"><![CDATA[fall 2011]]></category>
		<category domain="post_tag" nicename="stanford-university"><![CDATA[stanford university]]></category>
		<category domain="post_tag" nicename="top-places"><![CDATA[top places]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>s2mail</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>221</wp:comment_id>
			<wp:comment_author><![CDATA[Karanbir SIngh]]></wp:comment_author>
			<wp:comment_author_email>singh981@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>122.173.1.168</wp:comment_author_IP>
			<wp:comment_date>2012-06-13 08:28:42</wp:comment_date>
			<wp:comment_date_gmt>2012-06-13 08:28:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[hey bro ... wanted to know if ur following the stanford schedule strictly..like 1 assignment per week bcoz ur posts have significant time difference]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>222</wp:comment_id>
			<wp:comment_author><![CDATA[David Barton]]></wp:comment_author>
			<wp:comment_author_email>david@i4-apps.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.i4-apps.com</wp:comment_author_url>
			<wp:comment_author_IP>82.69.106.161</wp:comment_author_IP>
			<wp:comment_date>2012-06-13 11:27:36</wp:comment_date>
			<wp:comment_date_gmt>2012-06-13 11:27:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[nope.. i've been doing them as the mood takes me :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>221</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
</channel>
</rss>
